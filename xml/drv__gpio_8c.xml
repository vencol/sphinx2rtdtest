<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="drv__gpio_8c" kind="file" language="C++">
    <compoundname>drv_gpio.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="yes">freertos/FreeRTOS.h</includes>
    <includes local="yes">freertos/task.h</includes>
    <includes local="yes">esp_attr.h</includes>
    <includes refid="drv__gpio_8h" local="yes">drv_gpio.h</includes>
    <incdepgraph>
      <node id="1">
        <label>main/freezerdrv/drv_gpio.c</label>
        <link refid="drv__gpio_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>drv_gpio.h</label>
        <link refid="drv__gpio_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>driver/gpio.h</label>
      </node>
      <node id="4">
        <label>freertos/FreeRTOS.h</label>
      </node>
      <node id="6">
        <label>esp_attr.h</label>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
      <node id="5">
        <label>freertos/task.h</label>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="drv__gpio_8c_1af8baf7d9859733667317e58c0ff707d1" prot="public" static="no">
        <name>ESP_INTR_FLAG_DEFAULT</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/freezerdrv/drv_gpio.c" line="16" column="9" bodyfile="main/freezerdrv/drv_gpio.c" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="drv__gpio_8c_1a4eea0ee5c47283fad6dccf229bada210" prot="public" static="no">
        <name>MODULE_4G_CLOSE_TIME</name>
        <initializer>(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/freezerdrv/drv_gpio.c" line="17" column="9" bodyfile="main/freezerdrv/drv_gpio.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="drv__gpio_8c_1a35a6df1372a43e73273134a9992a8216" prot="public" static="no">
        <name>MODULE_4G_OPEN_TIME</name>
        <initializer>(MODULE_4G_CLOSE_TIME + 5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/freezerdrv/drv_gpio.c" line="18" column="9" bodyfile="main/freezerdrv/drv_gpio.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="drv__gpio_8c_1a38bf7e6ee812d5cac521a1e362557441" prot="public" static="no">
        <name>MODULE_4G_PWRKEY_OFF_TIME</name>
        <initializer>(MODULE_4G_OPEN_TIME + 5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/freezerdrv/drv_gpio.c" line="19" column="9" bodyfile="main/freezerdrv/drv_gpio.c" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="drv__gpio_8c_1a1998054b28ca6457244914b654fbc2e4" prot="public" static="no">
        <name>MODULE_4G_PWRKEY_REON_TIME</name>
        <initializer>(MODULE_4G_PWRKEY_OFF_TIME + 10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/freezerdrv/drv_gpio.c" line="20" column="9" bodyfile="main/freezerdrv/drv_gpio.c" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="drv__gpio_8c_1a08c9dce4b12556f46e70220af5d2333c" prot="public" static="no">
        <name>MODULE_4G_OPEN_MAX_TIME</name>
        <initializer>(MODULE_4G_PWRKEY_REON_TIME + 100)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/freezerdrv/drv_gpio.c" line="21" column="9" bodyfile="main/freezerdrv/drv_gpio.c" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="drv__gpio_8c_1aaa928c9a62449f7946da1e32f66c70d2" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool on</definition>
        <argsstring></argsstring>
        <name>on</name>
        <initializer>=true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/freezerdrv/drv_gpio.c" line="32" column="13" bodyfile="main/freezerdrv/drv_gpio.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="drv__gpio_8c_1ab3a706239e447e661eead48f1a1d12f1" prot="public" static="yes" mutable="no">
        <type>unsigned short</type>
        <definition>unsigned short powerOn4gTime</definition>
        <argsstring></argsstring>
        <name>powerOn4gTime</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/freezerdrv/drv_gpio.c" line="33" column="23" bodyfile="main/freezerdrv/drv_gpio.c" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="drv__gpio_8c_1a4041b0adf4b519d3b30a8a566b742111" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void IRAM_ATTR</type>
        <definition>static void IRAM_ATTR gpio_isr_handler</definition>
        <argsstring>(void *arg)</argsstring>
        <name>gpio_isr_handler</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/freezerdrv/drv_gpio.c" line="36" column="23" bodyfile="main/freezerdrv/drv_gpio.c" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="drv__gpio_8c_1a3ab5d91331d960069b52ccac63991b44" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void moduleGpioPro</definition>
        <argsstring>(void)</argsstring>
        <name>moduleGpioPro</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/freezerdrv/drv_gpio.c" line="40" column="13" bodyfile="main/freezerdrv/drv_gpio.c" bodystart="40" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="drv__gpio_8c_1a931f0e663717299473c7200bf8b6ea8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setModuleStatus</definition>
        <argsstring>(char type)</argsstring>
        <name>setModuleStatus</name>
        <param>
          <type>char</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/freezerdrv/drv_gpio.c" line="61" column="6" bodyfile="main/freezerdrv/drv_gpio.c" bodystart="61" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="drv__gpio_8c_1a7921b6f32111302a4f055af756b50c54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drvOutputGpioInit</definition>
        <argsstring>(void)</argsstring>
        <name>drvOutputGpioInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/freezerdrv/drv_gpio.c" line="73" column="6" bodyfile="main/freezerdrv/drv_gpio.c" bodystart="73" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="drv__gpio_8c_1a089ad43c7140ac808b81fe63dc85cc50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drvGpioPro</definition>
        <argsstring>(void)</argsstring>
        <name>drvGpioPro</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/freezerdrv/drv_gpio.c" line="114" column="6" bodyfile="main/freezerdrv/drv_gpio.c" bodystart="114" bodyend="117"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>ADC1<sp/>Example</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/>This<sp/>example<sp/>code<sp/>is<sp/>in<sp/>the<sp/>Public<sp/>Domain<sp/>(or<sp/>CC0<sp/>licensed,<sp/>at<sp/>your<sp/>option.)</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>this</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/>software<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freertos/FreeRTOS.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freertos/task.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_attr.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;drv_gpio.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ESP_INTR_FLAG_DEFAULT<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MODULE_4G_CLOSE_TIME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MODULE_4G_OPEN_TIME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MODULE_4G_CLOSE_TIME<sp/>+<sp/>5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MODULE_4G_PWRKEY_OFF_TIME<sp/><sp/><sp/><sp/><sp/><sp/>(MODULE_4G_OPEN_TIME<sp/>+<sp/>5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MODULE_4G_PWRKEY_REON_TIME<sp/><sp/><sp/><sp/><sp/>(MODULE_4G_PWRKEY_OFF_TIME<sp/>+<sp/>10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MODULE_4G_OPEN_MAX_TIME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MODULE_4G_PWRKEY_REON_TIME<sp/>+<sp/>100)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Forces<sp/>code<sp/>into<sp/>IRAM<sp/>instead<sp/>of<sp/>flash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>IRAM_ATTR<sp/>_SECTION_ATTR_IMPL(&quot;.iram1&quot;,<sp/>__COUNTER__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>static<sp/>unsigned<sp/>short<sp/>abc=0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(++abc<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>SET_4GRESET_OUTPUT(1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else<sp/>if(abc<sp/>==<sp/>500)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>SET_4GRESET_OUTPUT(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else<sp/>if(abc<sp/>==<sp/>1000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>abc<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>powerOn4gTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IRAM_ATTR<sp/>gpio_isr_handler(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/>on<sp/>=<sp/>!on;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>moduleGpioPro(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="comment">//10ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(powerOn4gTime)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(powerOn4gTime<sp/>==<sp/>MODULE_4G_CLOSE_TIME)<sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SET_4GPOWER_OUTPUT(OUTPUT_LOW);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SET_4GPWRKEY_OUTPUT(OUTPUT_LOW);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SET_4GRESET_OUTPUT(OUTPUT_LOW);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(powerOn4gTime<sp/>==<sp/>MODULE_4G_OPEN_TIME)<sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SET_4GPOWER_OUTPUT(OUTPUT_HIGH);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SET_4GPWRKEY_OUTPUT(OUTPUT_HIGH);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(powerOn4gTime<sp/>==<sp/>MODULE_4G_PWRKEY_OFF_TIME)<sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SET_4GPWRKEY_OUTPUT(OUTPUT_LOW);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(powerOn4gTime<sp/>==<sp/>MODULE_4G_PWRKEY_REON_TIME)<sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SET_4GPWRKEY_OUTPUT(OUTPUT_HIGH);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(powerOn4gTime<sp/>==<sp/>MODULE_4G_OPEN_MAX_TIME)<sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>powerOn4gTime<sp/>=<sp/>MODULE_4G_OPEN_MAX_TIME<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>powerOn4gTime++;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setModuleStatus(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>type)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type)<sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>powerOn4gTime<sp/>=<sp/>MODULE_4G_CLOSE_TIME;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SET_4GPOWER_OUTPUT(OUTPUT_LOW);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SET_4GPWRKEY_OUTPUT(OUTPUT_LOW);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SET_4GRESET_OUTPUT(OUTPUT_LOW);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>powerOn4gTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drvOutputGpioInit(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_config_t<sp/>io_conf;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//disable<sp/>interrupt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>io_conf.intr_type<sp/>=<sp/>GPIO_PIN_INTR_DISABLE;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>as<sp/>output<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>io_conf.mode<sp/>=<sp/>GPIO_MODE_OUTPUT;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//bit<sp/>mask<sp/>of<sp/>the<sp/>pins<sp/>that<sp/>you<sp/>want<sp/>to<sp/>set,e.g.GPIO18/19</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>io_conf.pin_bit_mask<sp/>=<sp/>FREEZER_OUTPUT_GPIO();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//disable<sp/>pull-down<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>io_conf.pull_down_en<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//disable<sp/>pull-up<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>io_conf.pull_up_en<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//configure<sp/>GPIO<sp/>with<sp/>the<sp/>given<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_config(&amp;io_conf);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/>SET_COMPRESSOR_OUTPUT(OUTPUT_LOW);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/>SET_FAN_OUTPUT(OUTPUT_LOW);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/>SET_4GPOWER_OUTPUT(OUTPUT_LOW);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/>SET_4GPWRKEY_OUTPUT(OUTPUT_LOW);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/>SET_4GRESET_OUTPUT(OUTPUT_LOW);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>interrupt<sp/>of<sp/>rising<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>io_conf.intr_type<sp/>=<sp/>GPIO_PIN_INTR_NEGEDGE;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//bit<sp/>mask<sp/>of<sp/>the<sp/>pins,<sp/>use<sp/>GPIO4/5<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>io_conf.pin_bit_mask<sp/>=<sp/>FREEZER_INTERRUPT_GPIO();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>as<sp/>input<sp/>mode<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>io_conf.mode<sp/>=<sp/>GPIO_MODE_INPUT;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//enable<sp/>pull-up<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>io_conf.pull_up_en<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_config(&amp;io_conf);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//install<sp/>gpio<sp/>isr<sp/>service</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_install_isr_service(ESP_INTR_FLAG_DEFAULT);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//change<sp/>gpio<sp/>intrrupt<sp/>type<sp/>for<sp/>one<sp/>pin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_set_intr_type(INTERRUPT_ZERO_NUMBER,<sp/>GPIO_PIN_INTR_NEGEDGE);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//hook<sp/>isr<sp/>handler<sp/>for<sp/>specific<sp/>gpio<sp/>pin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_isr_handler_add(INTERRUPT_ZERO_NUMBER,<sp/>gpio_isr_handler,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>INTERRUPT_ZERO_NUMBER);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>//remove<sp/>isr<sp/>handler<sp/>for<sp/>gpio<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>gpio_isr_handler_remove(GPIO_INPUT_IO_0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drvGpioPro(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="comment">//10ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/>moduleGpioPro();</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="main/freezerdrv/drv_gpio.c"/>
  </compounddef>
</doxygen>
