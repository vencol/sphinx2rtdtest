<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="mqtttopic_8c" kind="file" language="C++">
    <compoundname>mqtttopic.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="yes">esp_log.h</includes>
    <includes refid="atcmd_8h" local="yes">atcmd.h</includes>
    <includes refid="atmqtt_8h" local="yes">atmqtt.h</includes>
    <includes refid="iotinfo_8h" local="yes">iotinfo.h</includes>
    <includes refid="mqtttopic_8h" local="yes">mqtttopic.h</includes>
    <includes refid="fzprotocol_8h" local="yes">fzprotocol.h</includes>
    <incdepgraph>
      <node id="7">
        <label>iotinfo.h</label>
        <link refid="iotinfo_8h_source"/>
      </node>
      <node id="9">
        <label>fzprotocol.h</label>
        <link refid="fzprotocol_8h_source"/>
      </node>
      <node id="1">
        <label>main/iot/mqtttopic.c</label>
        <link refid="mqtttopic_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>mqtttopic.h</label>
        <link refid="mqtttopic_8h_source"/>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
      <node id="4">
        <label>esp_log.h</label>
      </node>
      <node id="5">
        <label>atcmd.h</label>
        <link refid="atcmd_8h_source"/>
      </node>
      <node id="6">
        <label>atmqtt.h</label>
        <link refid="atmqtt_8h_source"/>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structmqtt__tiopic__t" prot="public">mqtt_tiopic_t</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="mqtttopic_8c_1a98c24dc9eb271dd1b713bfa38220de12" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* ATTAG</definition>
        <argsstring></argsstring>
        <name>ATTAG</name>
        <initializer>= &quot;mqttpro&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/iot/mqtttopic.c" line="28" column="19" bodyfile="main/iot/mqtttopic.c" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mqtttopic_8c_1a5a35dae65046762c551bc3708c4ff64f" prot="public" static="no" mutable="no">
        <type>mqtt_topic_map_opt_t</type>
        <definition>mqtt_topic_map_opt_t mqtttopic_current</definition>
        <argsstring></argsstring>
        <name>mqtttopic_current</name>
        <initializer>=MQTT_TOPIC_NONE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/iot/mqtttopic.c" line="37" column="22" bodyfile="main/iot/mqtttopic.c" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mqtttopic_8c_1a36eadb6b5300b0dac441f758a62f16b6" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structmqtt__tiopic__t" kindref="compound">mqtt_tiopic_t</ref></type>
        <definition>const mqtt_tiopic_t mqtt_tiopic[]</definition>
        <argsstring>[]</argsstring>
        <name>mqtt_tiopic</name>
        <initializer>=
{
   {&quot;/sys/&quot;, &quot;/rrpc/request&quot;, &quot;/+&quot;},
   {&quot;/shadow/get/&quot;, NULL, NULL},
   {&quot;/&quot;, &quot;/user/Rpt&quot;, &quot;/+&quot;},
   {&quot;/&quot;, &quot;/user/Upgrade&quot;, NULL},
   {&quot;/shadow/update/&quot;, NULL, NULL},
   {&quot;/&quot;, &quot;/user/Rpt&quot;, &quot;/DevInfo&quot;},
   {&quot;/&quot;, &quot;/user/Rpt&quot;, &quot;/AttrRpt&quot;},
   {&quot;/&quot;, &quot;/user/Rpt&quot;, &quot;/AlarmRpt&quot;},
   {&quot;/sys/&quot;, &quot;/rrpc/response/&quot;, NULL},
   {&quot;/&quot;, &quot;/user/UpgradeAck&quot;, NULL},
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/iot/mqtttopic.c" line="38" column="28" bodyfile="main/iot/mqtttopic.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="mqtttopic_8c_1a89bc43e077688611647fca4f37ddfdae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void iotMqttSubSuccessCb</definition>
        <argsstring>(unsigned char status)</argsstring>
        <name>iotMqttSubSuccessCb</name>
        <param>
          <type>unsigned char</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/iot/mqtttopic.c" line="52" column="13" bodyfile="main/iot/mqtttopic.c" bodystart="52" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="mqtttopic_8c_1a177115609dafff8edc21fba6c3f5a1ef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void iotMqttUnSubSuccessCb</definition>
        <argsstring>(unsigned char status)</argsstring>
        <name>iotMqttUnSubSuccessCb</name>
        <param>
          <type>unsigned char</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/iot/mqtttopic.c" line="63" column="13" bodyfile="main/iot/mqtttopic.c" bodystart="63" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="mqtttopic_8c_1adf2ec1c6a30539cde5d85de10263300f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void iotMqttPubSuccessCb</definition>
        <argsstring>(unsigned char status)</argsstring>
        <name>iotMqttPubSuccessCb</name>
        <param>
          <type>unsigned char</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/iot/mqtttopic.c" line="70" column="13" bodyfile="main/iot/mqtttopic.c" bodystart="70" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="mqtttopic_8c_1a34e4ef31ee923751eac4853537dbb60a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void iotMqttOperationCb</definition>
        <argsstring>(unsigned char status)</argsstring>
        <name>iotMqttOperationCb</name>
        <param>
          <type>unsigned char</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/iot/mqtttopic.c" line="95" column="13" bodyfile="main/iot/mqtttopic.c" bodystart="95" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="mqtttopic_8c_1a398c1580af01a8022180e97e5a591349" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void iotMqttReceiveCb</definition>
        <argsstring>(char *topic, char *payload)</argsstring>
        <name>iotMqttReceiveCb</name>
        <param>
          <type>char *</type>
          <declname>topic</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>payload</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/iot/mqtttopic.c" line="125" column="13" bodyfile="main/iot/mqtttopic.c" bodystart="125" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="mqtttopic_8c_1a0fcdfd6dd7073817aa9da1f820ff5f7c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char* generaMqttTopic</definition>
        <argsstring>(char *prefix, char *suffix, char *flexfix)</argsstring>
        <name>generaMqttTopic</name>
        <param>
          <type>char *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>suffix</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>flexfix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/iot/mqtttopic.c" line="190" column="13" bodyfile="main/iot/mqtttopic.c" bodystart="190" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="mqtttopic_8c_1a6165b8b4170e32293dc31653f2f93ad4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int subMqttTopic</definition>
        <argsstring>(unsigned char topicnum, char *flexfix)</argsstring>
        <name>subMqttTopic</name>
        <param>
          <type>unsigned char</type>
          <declname>topicnum</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>flexfix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/iot/mqtttopic.c" line="226" column="5" bodyfile="main/iot/mqtttopic.c" bodystart="226" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="mqtttopic_8c_1afde8027ac1f824516fded0dc3062fb34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int unSubMqttTopic</definition>
        <argsstring>(unsigned char topicnum, char *flexfix)</argsstring>
        <name>unSubMqttTopic</name>
        <param>
          <type>unsigned char</type>
          <declname>topicnum</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>flexfix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/iot/mqtttopic.c" line="253" column="5" bodyfile="main/iot/mqtttopic.c" bodystart="253" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="mqtttopic_8c_1a49932483939546d91f6fbd8d10ebcbc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int publishMqttTopic</definition>
        <argsstring>(unsigned char topicnum, char *flexfix, char *payload)</argsstring>
        <name>publishMqttTopic</name>
        <param>
          <type>unsigned char</type>
          <declname>topicnum</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>flexfix</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>payload</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/iot/mqtttopic.c" line="280" column="5" bodyfile="main/iot/mqtttopic.c" bodystart="280" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="mqtttopic_8c_1a3336fde9d9a8a32eb4446f12fe80d91b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mqttInit</definition>
        <argsstring>(void)</argsstring>
        <name>mqttInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/iot/mqtttopic.c" line="309" column="5" bodyfile="main/iot/mqtttopic.c" bodystart="309" bodyend="320"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>topic<sp/>Example</highlight></codeline>
<codeline lineno="2"><highlight class="comment">/sys/a14XBNg6pCp/123456789012345/user/Rpt/AlarmRpt</highlight></codeline>
<codeline lineno="3"><highlight class="comment">RRPC请求消息Topic：<sp/><sp/>/sys/${YourProductKey}/${YourDeviceName}/rrpc/request/${messageId}</highlight></codeline>
<codeline lineno="4"><highlight class="comment">RRPC响应消息Topic：<sp/><sp/>/sys/${YourProductKey}/${YourDeviceName}/rrpc/response/${messageId}</highlight></codeline>
<codeline lineno="5"><highlight class="comment">RRPC订阅Topic：<sp/><sp/><sp/>/sys/${YourProductKey}/${YourDeviceName}/rrpc/request/+</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">shadow发布Topic<sp/><sp/><sp/>/shadow/update/${YourProductKey}/${YourDeviceName}</highlight></codeline>
<codeline lineno="8"><highlight class="comment">shadow订阅Topic<sp/><sp/><sp/>/shadow/get/${YourProductKey}/${YourDeviceName}</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment">发布告警上报Topic<sp/><sp/><sp/><sp/>/${YourProductKey}/${YourDeviceName}/user/Rpt/AlarmRpt</highlight></codeline>
<codeline lineno="11"><highlight class="comment">发布属性上报Topic<sp/><sp/><sp/><sp/>/${YourProductKey}/${YourDeviceName}/user/Rpt/AttrRpt</highlight></codeline>
<codeline lineno="12"><highlight class="comment">发布设备信息Topic<sp/><sp/><sp/><sp/>/${YourProductKey}/${YourDeviceName}/user/Rpt/DevInfo</highlight></codeline>
<codeline lineno="13"><highlight class="comment">订阅Topic<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/${YourProductKey}/${YourDeviceName}/user/Rpt/+</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment">发布升级确认信息Topic<sp/><sp/><sp/><sp/>/${YourProductKey}/${YourDeviceName}/user/UpgradeAck</highlight></codeline>
<codeline lineno="16"><highlight class="comment">订阅设备升级Topic<sp/><sp/><sp/><sp/>/${YourProductKey}/${YourDeviceName}/user/Upgrade</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;esp_system.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_log.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;atcmd.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;atmqtt.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;iotinfo.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mqtttopic.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fzprotocol.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ATTAG<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;mqttpro&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="structmqtt__tiopic__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*prefix;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*suffix;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*flexfix;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}<sp/><ref refid="structmqtt__tiopic__t" kindref="compound">mqtt_tiopic_t</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">mqtt_topic_map_opt_t<sp/>mqtttopic_current=MQTT_TOPIC_NONE;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmqtt__tiopic__t" kindref="compound">mqtt_tiopic_t</ref><sp/>mqtt_tiopic[]<sp/>=</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;/sys/&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/rrpc/request&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/+&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;/shadow/get/&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/>NULL},</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/user/Rpt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/+&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/user/Upgrade&quot;</highlight><highlight class="normal">,<sp/>NULL},</highlight><highlight class="comment">//MQTT_TOPIC_SUB_END</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;/shadow/update/&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/>NULL},</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/user/Rpt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/DevInfo&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/user/Rpt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/AttrRpt&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/user/Rpt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/AlarmRpt&quot;</highlight><highlight class="normal">},</highlight><highlight class="comment">//MQTT_TOPIC_PUB_END</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;/sys/&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/rrpc/response/&quot;</highlight><highlight class="normal">,<sp/>NULL},</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/user/UpgradeAck&quot;</highlight><highlight class="normal">,<sp/>NULL},</highlight></codeline>
<codeline lineno="50"><highlight class="normal">};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>iotMqttSubSuccessCb(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>status)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mqtttopic_current<sp/>&lt;<sp/>MQTT_TOPIC_SUB_END)<sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(++mqtttopic_current<sp/>==<sp/>MQTT_TOPIC_SUB_END){</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>sub<sp/>all<sp/>[status:%d]<sp/>[mqtttopic:%d]&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>,<sp/>status,<sp/>mqtttopic_current);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fzReportShadowUpdate(-1);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subMqttTopic(mqtttopic_current,<sp/>mqtt_tiopic[mqtttopic_current].flexfix);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>iotMqttUnSubSuccessCb(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>status)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mqtttopic_current<sp/>&amp;&amp;<sp/>mqtttopic_current<sp/>&lt;<sp/>MQTT_TOPIC_SUB_END)<sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--mqtttopic_current;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unSubMqttTopic(mqtttopic_current,<sp/>mqtt_tiopic[mqtttopic_current].flexfix);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>iotMqttPubSuccessCb(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>status)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iotinfo_module.iotStatus<sp/>&lt;<sp/>IOT_CONNECTMQTT)<sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(++mqtttopic_current<sp/>&lt;<sp/>MQTT_TOPIC_PUB_END)<sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mqtttopic_current<sp/>==<sp/>MQTT_TOPIC_PUB_DEVINFO)<sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fzReportRegisterInfo();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mqtttopic_current<sp/>==<sp/>MQTT_TOPIC_PUB_ATTRRPT)<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fzReportAttrsInfo(0);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mqtttopic_current<sp/>==<sp/>MQTT_TOPIC_PUB_ALARMRPT)<sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fzReportAlarmInfo();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mqtttopic_current<sp/>==<sp/>MQTT_TOPIC_PUB_END){</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iotinfo_module.iotStatus<sp/>=<sp/>IOT_CONNECTMQTT;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>pub<sp/>all<sp/>[status:%d]<sp/>[mqtttopic:%d]&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>,<sp/>status,<sp/>mqtttopic_current);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mqtttopic_current<sp/>==<sp/>MQTT_TOPIC_PUB_UPGRADEACK)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iotinfo_module.otaStatus<sp/>==<sp/>3)<sp/><sp/>{</highlight><highlight class="comment">//OTA_SUCCESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;Prepare<sp/>to<sp/>restart<sp/>system!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/>esp_restart(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_restart();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>iotMqttOperationCb(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>status)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>status<sp/>[%d]<sp/>topic<sp/>[%d]&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>,<sp/>status,<sp/>mqtttopic_current);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(status<sp/>&gt;<sp/>MQTT_CONNECT_FAIL<sp/>&amp;&amp;<sp/>status%2<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATSENDCMD_CHANGE_NULL();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(status)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MQTT_CONNECT_SUCCESS:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>subMqttTopic(MQTT_TOPIC_SUB_RRPC,<sp/>NULL);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MQTT_CONNECT_SUB_SUCCESS:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iotMqttSubSuccessCb(0);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MQTT_CONNECT_UNSUB_SUCCESS:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iotMqttUnSubSuccessCb(0);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MQTT_CONNECT_PUB_SUCCESS:</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iotMqttPubSuccessCb(0);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MQTT_DISCONNECT_SUCCESS:</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>MQTT_DISCONNECT_SUCCESS&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(status<sp/>&gt;<sp/>MQTT_CONNECT_FAIL<sp/>&amp;&amp;<sp/>status%2)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATSENDCMD_CHANGE_NULL();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>other<sp/>or<sp/>fail&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>iotMqttReceiveCb(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*topic,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*payload)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>imei;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str=NULL,<sp/>*rectopic=NULL,<sp/>*recpayload=NULL;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(topic<sp/>&amp;&amp;<sp/>payload)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ESP_LOGI(ATTAG,<sp/>&quot;%s<sp/>topic<sp/>[%s]<sp/>payload<sp/>[%s]&quot;,<sp/>__FUNCTION__<sp/>,<sp/>topic,<sp/>payload);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rectopic<sp/>=<sp/>malloc(strlen(topic)<sp/>+<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rectopic)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recpayload<sp/>=<sp/>malloc(strlen(payload)<sp/>+<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(recpayload<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(rectopic);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rectopic<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setReportTime(0);</highlight><highlight class="comment">//set<sp/>report<sp/>clean</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(rectopic,<sp/>topic,<sp/>strlen(topic)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(recpayload,<sp/>payload,<sp/>strlen(payload)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>topic<sp/>[%s]<sp/>payload<sp/>[%s]&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>,<sp/>rectopic,<sp/>payload);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/>strstr(rectopic,<sp/>iotinfo_module.productKey);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(str){</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>pk<sp/>[%s]&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>,<sp/>str);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imei<sp/>=<sp/>str2Imei(str<sp/>+<sp/>strlen(iotinfo_module.productKey)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(imei<sp/>==<sp/>iotinfo_module.imei){</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>memcmp(rectopic,<sp/>mqtt_tiopic[MQTT_TOPIC_SUB_SHADOW].prefix,<sp/>strlen(mqtt_tiopic[MQTT_TOPIC_SUB_SHADOW].prefix)<sp/>)<sp/>==<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fzReceiveShadowMsg(payload,<sp/>strlen(payload)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//shadow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/>str<sp/>+<sp/>strlen(iotinfo_module.productKey)<sp/>+<sp/>AT_CMD_IMEI_IMSI_LEN<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>topic<sp/>end<sp/>[%s]&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>,<sp/>str);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>memcmp(str,<sp/>mqtt_tiopic[MQTT_TOPIC_SUB_RRPC].suffix,<sp/>strlen(mqtt_tiopic[MQTT_TOPIC_SUB_RRPC].suffix)<sp/>)<sp/>==<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/>str<sp/>+<sp/>strlen(mqtt_tiopic[MQTT_TOPIC_SUB_RRPC].suffix)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>topic<sp/>rrpc<sp/>id<sp/>[%s]&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>,<sp/>str);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fzReceiveRrpcMsg(payload,<sp/>strlen(payload)<sp/>+<sp/>1,<sp/>str);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//rrpc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>memcmp(str,<sp/>mqtt_tiopic[MQTT_TOPIC_SUB_RPT].suffix,<sp/>strlen(mqtt_tiopic[MQTT_TOPIC_SUB_RPT].suffix)<sp/>)<sp/>==<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/>str<sp/>+<sp/>strlen(mqtt_tiopic[MQTT_TOPIC_SUB_RPT].suffix);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>user<sp/>topic<sp/>[%s]&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>str);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(memcmp(str,<sp/>mqtt_tiopic[MQTT_TOPIC_PUB_ALARMRPT].flexfix,<sp/>strlen(mqtt_tiopic[MQTT_TOPIC_PUB_ALARMRPT].flexfix))<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//AlarmRpt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(memcmp(str,<sp/>mqtt_tiopic[MQTT_TOPIC_PUB_ALARMRPT].flexfix,<sp/>strlen(mqtt_tiopic[MQTT_TOPIC_PUB_ALARMRPT].flexfix))<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//AttrRpt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(memcmp(str,<sp/>mqtt_tiopic[MQTT_TOPIC_PUB_DEVINFO].flexfix,<sp/>strlen(mqtt_tiopic[MQTT_TOPIC_PUB_DEVINFO].flexfix))<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//DevInfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>memcmp(str,<sp/>mqtt_tiopic[MQTT_TOPIC_SUB_UPGRADE].suffix,<sp/>strlen(mqtt_tiopic[MQTT_TOPIC_SUB_UPGRADE].suffix)<sp/>)<sp/>==<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fzReceiveUpgradeMsg(payload,<sp/>strlen(payload)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//upgrade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//imei</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//productKey</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(rectopic);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(recpayload);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rectopic<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recpayload<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">//must<sp/>free<sp/>topic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>generaMqttTopic(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*prefix,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*suffix,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*flexfix)</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len=0;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*topic=NULL;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(prefix<sp/>==<sp/>NULL<sp/>||<sp/>iotinfo_module.productKey<sp/>==<sp/>NULL<sp/>||<sp/>iotinfo_module.imei<sp/>&lt;<sp/>100000000000000ULL)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(suffix<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>strlen(prefix)<sp/>+<sp/>strlen(iotinfo_module.productKey)<sp/>+<sp/>AT_CMD_IMEI_IMSI_LEN<sp/>+<sp/>4;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(flexfix<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>strlen(prefix)<sp/>+<sp/>strlen(suffix)<sp/>+<sp/>strlen(iotinfo_module.productKey)<sp/>+<sp/>AT_CMD_IMEI_IMSI_LEN<sp/>+<sp/>4;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>strlen(prefix)<sp/>+<sp/>strlen(suffix)<sp/>+<sp/>strlen(flexfix)<sp/>+<sp/>strlen(iotinfo_module.productKey)<sp/>+<sp/>AT_CMD_IMEI_IMSI_LEN<sp/>+<sp/>4;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(len<sp/>&gt;<sp/>AT_CMD_MQTT_MAX_TOPIC_LEN)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/>topic<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(len);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(topic<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(suffix<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>snprintf(topic,<sp/>len,<sp/></highlight><highlight class="stringliteral">&quot;%s%s/%lld&quot;</highlight><highlight class="normal">,<sp/>prefix,<sp/>iotinfo_module.productKey,<sp/>iotinfo_module.imei);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(flexfix<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>snprintf(topic,<sp/>len,<sp/></highlight><highlight class="stringliteral">&quot;%s%s/%lld%s&quot;</highlight><highlight class="normal">,<sp/>prefix,<sp/>iotinfo_module.productKey,<sp/>iotinfo_module.imei,<sp/>suffix);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>snprintf(topic,<sp/>len,<sp/></highlight><highlight class="stringliteral">&quot;%s%s/%lld%s%s&quot;</highlight><highlight class="normal">,<sp/>prefix,<sp/>iotinfo_module.productKey,<sp/>iotinfo_module.imei,<sp/>suffix,<sp/>flexfix);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(len<sp/>&gt;<sp/>AT_CMD_MQTT_MAX_TOPIC_LEN)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(topic);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>topic<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>success<sp/>[%s]<sp/>len:%d&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>topic,<sp/>strlen(topic)<sp/>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>topic;</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subMqttTopic(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>topicnum,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*flexfix)</highlight></codeline>
<codeline lineno="227"><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret=-1;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*topic=NULL;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for(int<sp/>i=0;<sp/>i&lt;MQTT_TOPIC_SUB_END;<sp/>i++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mqtttopic_current<sp/>=<sp/>topicnum;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(mqtttopic_current<sp/>&gt;<sp/>MQTT_TOPIC_SUB_END)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>topicnum<sp/>=<sp/>mqtttopic_current<sp/>-<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ESP_LOGI(ATTAG,<sp/>&quot;%s<sp/>in<sp/><sp/>[%d]<sp/>:&quot;,<sp/>__FUNCTION__,<sp/>esp_get_free_heap_size());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(flexfix<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flexfix<sp/>=<sp/>mqtt_tiopic[topicnum].flexfix;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(flexfix)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topic<sp/>=<sp/>generaMqttTopic(mqtt_tiopic[topicnum].prefix,<sp/>mqtt_tiopic[topicnum].suffix,<sp/>flexfix);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topic<sp/>=<sp/>generaMqttTopic(mqtt_tiopic[topicnum].prefix,<sp/>mqtt_tiopic[topicnum].suffix,<sp/>NULL);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(topic)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(atSubMqttTopic(AT_CMD_MQTT_QOS,<sp/>topic)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(topic);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topic<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ESP_LOGI(ATTAG,<sp/>&quot;%s<sp/>out<sp/><sp/>[%d]<sp/>:&quot;,<sp/>__FUNCTION__,<sp/>esp_get_free_heap_size());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unSubMqttTopic(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>topicnum,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*flexfix)</highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret=-1;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*topic=NULL;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for(int<sp/>i=0;<sp/>i&lt;MQTT_TOPIC_SUB_END;<sp/>i++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mqtttopic_current<sp/>=<sp/>topicnum;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(mqtttopic_current<sp/>&gt;<sp/>MQTT_TOPIC_SUB_END)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>topicnum<sp/>=<sp/>mqtttopic_current<sp/>-<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ESP_LOGI(ATTAG,<sp/>&quot;%s<sp/>in<sp/><sp/>[%d]<sp/>:&quot;,<sp/>__FUNCTION__,<sp/>esp_get_free_heap_size());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(flexfix<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flexfix<sp/>=<sp/>mqtt_tiopic[topicnum].flexfix;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(flexfix)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topic<sp/>=<sp/>generaMqttTopic(mqtt_tiopic[topicnum].prefix,<sp/>mqtt_tiopic[topicnum].suffix,<sp/>flexfix);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topic<sp/>=<sp/>generaMqttTopic(mqtt_tiopic[topicnum].prefix,<sp/>mqtt_tiopic[topicnum].suffix,<sp/>NULL);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(topic)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(atUnSubMqttTopic(AT_CMD_MQTT_DUP,<sp/>topic)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(topic);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topic<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ESP_LOGI(ATTAG,<sp/>&quot;%s<sp/>out<sp/><sp/>[%d]<sp/>:&quot;,<sp/>__FUNCTION__,<sp/>esp_get_free_heap_size());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>publishMqttTopic(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>topicnum,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*flexfix,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*payload)</highlight></codeline>
<codeline lineno="281"><highlight class="normal">{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret=-1;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*topic=NULL;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(payload<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for(int<sp/>i=0;<sp/>i&lt;MQTT_TOPIC_SUB_END;<sp/>i++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mqtttopic_current<sp/>=<sp/>topicnum;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(mqtttopic_current<sp/>&gt;<sp/>MQTT_TOPIC_SUB_END)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>topicnum<sp/>=<sp/>mqtttopic_current<sp/>-<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ESP_LOGI(ATTAG,<sp/>&quot;%s<sp/>in<sp/><sp/>[%d]<sp/>:&quot;,<sp/>__FUNCTION__,<sp/>esp_get_free_heap_size());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(flexfix<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flexfix<sp/>=<sp/>mqtt_tiopic[topicnum].flexfix;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(flexfix)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topic<sp/>=<sp/>generaMqttTopic(mqtt_tiopic[topicnum].prefix,<sp/>mqtt_tiopic[topicnum].suffix,<sp/>flexfix);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topic<sp/>=<sp/>generaMqttTopic(mqtt_tiopic[topicnum].prefix,<sp/>mqtt_tiopic[topicnum].suffix,<sp/>NULL);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(topic)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(atPublishMqttTopic(topic,<sp/>payload)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(topic);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topic<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ESP_LOGI(ATTAG,<sp/>&quot;%s<sp/>out<sp/><sp/>[%d]<sp/>:&quot;,<sp/>__FUNCTION__,<sp/>esp_get_free_heap_size());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mqttInit(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="310"><highlight class="normal">{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(atMqttInfoInit(SECURE_MODE)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(atMqttCallBackInit(iotMqttOperationCb,<sp/>iotMqttReceiveCb)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>success<sp/>[]&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>atConnectMqtt(10);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="main/iot/mqtttopic.c"/>
  </compounddef>
</doxygen>
