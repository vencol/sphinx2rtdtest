<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="athttp_8c" kind="file" language="C++">
    <compoundname>athttp.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="yes">esp_log.h</includes>
    <includes local="yes">cJSON.h</includes>
    <includes refid="iotinfo_8h" local="yes">iotinfo.h</includes>
    <includes refid="atcmd_8h" local="yes">atcmd.h</includes>
    <includes refid="athttp_8h" local="yes">athttp.h</includes>
    <incdepgraph>
      <node id="6">
        <label>iotinfo.h</label>
        <link refid="iotinfo_8h_source"/>
      </node>
      <node id="5">
        <label>cJSON.h</label>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
      <node id="4">
        <label>esp_log.h</label>
      </node>
      <node id="7">
        <label>atcmd.h</label>
        <link refid="atcmd_8h_source"/>
      </node>
      <node id="1">
        <label>main/atprocess/athttp.c</label>
        <link refid="athttp_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>athttp.h</label>
        <link refid="athttp_8h_source"/>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="athttp_8c_1a9d2ef40b9dc46fc33c05283deb13fff0" prot="public" static="no">
        <name>URL_TEST</name>
        <initializer>&quot;47.242.12.154:8080/freezer.bin&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/atprocess/athttp.c" line="18" column="9" bodyfile="main/atprocess/athttp.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="athttp_8c_1a37cd50556a9b69a88ed13d09da756992" prot="public" static="no">
        <name>OTA_READMODE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/atprocess/athttp.c" line="21" column="9" bodyfile="main/atprocess/athttp.c" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="athttp_8c_1a18b33b2a839dde86b8962fbb4f7f3683" prot="public" static="no">
        <name>OTA_NONE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/atprocess/athttp.c" line="23" column="9" bodyfile="main/atprocess/athttp.c" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="athttp_8c_1a3dd5561168ca55f483e27cee85b2137b" prot="public" static="no">
        <name>OTA_WORKING</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/atprocess/athttp.c" line="24" column="9" bodyfile="main/atprocess/athttp.c" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="athttp_8c_1a95da05d4a948a6433866f27287dbe059" prot="public" static="no">
        <name>OTA_FAIL</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/atprocess/athttp.c" line="25" column="9" bodyfile="main/atprocess/athttp.c" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="athttp_8c_1af95350bd912f1797eaf2ad1ff338faad" prot="public" static="no">
        <name>OTA_SUCCESS</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/atprocess/athttp.c" line="26" column="9" bodyfile="main/atprocess/athttp.c" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="athttp_8c_1a7fca94be11fd12e139434020598ab9c5" prot="public" static="no">
        <name>OTA_FIRST_PACK_SIZE</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/atprocess/athttp.c" line="28" column="9" bodyfile="main/atprocess/athttp.c" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="athttp_8c_1a24859ba2ccdd74ecdb5805af10b6ed8b" prot="public" static="no">
        <name>OTA_ONE_PACK_MAX</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/atprocess/athttp.c" line="29" column="9" bodyfile="main/atprocess/athttp.c" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="athttp_8c_1a98c24dc9eb271dd1b713bfa38220de12" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* ATTAG</definition>
        <argsstring></argsstring>
        <name>ATTAG</name>
        <initializer>= &quot;athttp&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/atprocess/athttp.c" line="16" column="19" bodyfile="main/atprocess/athttp.c" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="athttp_8c_1acd2c4e68d863dce6beb1dcd8066eed78" prot="public" static="yes" mutable="no">
        <type>char *</type>
        <definition>char* otaBuf</definition>
        <argsstring></argsstring>
        <name>otaBuf</name>
        <initializer>=NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/atprocess/athttp.c" line="30" column="13" bodyfile="main/atprocess/athttp.c" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="athttp_8c_1a0dfa897a54f6cbcffd6ad1b4677e04d1" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int otaStep</definition>
        <argsstring></argsstring>
        <name>otaStep</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/atprocess/athttp.c" line="31" column="12" bodyfile="main/atprocess/athttp.c" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="athttp_8c_1af8be042035e169d72676bb76737e69f1" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int httpBodySize</definition>
        <argsstring></argsstring>
        <name>httpBodySize</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/atprocess/athttp.c" line="32" column="12" bodyfile="main/atprocess/athttp.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="athttp_8c_1a2282c476a5e630be158ab63fe786970e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int atOtaQuit</definition>
        <argsstring>(char type)</argsstring>
        <name>atOtaQuit</name>
        <param>
          <type>char</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/atprocess/athttp.c" line="33" column="5" bodyfile="main/atprocess/athttp.c" bodystart="33" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="athttp_8c_1a79ae94d709d9934923bbb957866f33ee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int atGetOtaInfo</definition>
        <argsstring>(const char *url)</argsstring>
        <name>atGetOtaInfo</name>
        <param>
          <type>const char *</type>
          <declname>url</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/atprocess/athttp.c" line="43" column="12" bodyfile="main/atprocess/athttp.c" bodystart="43" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="athttp_8c_1a114118b2eddcacb21f89eafe7c92d541" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int atGetOtaBody</definition>
        <argsstring>(unsigned short step)</argsstring>
        <name>atGetOtaBody</name>
        <param>
          <type>unsigned short</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/atprocess/athttp.c" line="69" column="12" bodyfile="main/atprocess/athttp.c" bodystart="69" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="athttp_8c_1a71c9e5b1ec573cd2b2555a30d7b7de01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int appOtaReceive</definition>
        <argsstring>(int step, char *buf, int buflen)</argsstring>
        <name>appOtaReceive</name>
        <param>
          <type>int</type>
          <declname>step</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>buflen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/atprocess/athttp.c" line="110" column="12" bodyfile="main/app_main.c" bodystart="23" bodyend="104" declfile="main/atprocess/athttp.c" declline="110" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="athttp_8c_1a43e2fbb8a6eb817e327908aca7b3b43f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int atMergeOtaInfo</definition>
        <argsstring>(char *recbuf, int len)</argsstring>
        <name>atMergeOtaInfo</name>
        <param>
          <type>char *</type>
          <declname>recbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/atprocess/athttp.c" line="111" column="12" bodyfile="main/atprocess/athttp.c" bodystart="111" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="athttp_8c_1ab56a2d56e2df1843c09c20c991ba8969" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int atGetIotInfo</definition>
        <argsstring>(unsigned long long imei, const char *customid)</argsstring>
        <name>atGetIotInfo</name>
        <param>
          <type>unsigned long long</type>
          <declname>imei</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>customid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/atprocess/athttp.c" line="169" column="12" bodyfile="main/atprocess/athttp.c" bodystart="169" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="athttp_8c_1aebec664396143d128545e8df2b9af8ad" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int atGetIotBody</definition>
        <argsstring>(unsigned short start, unsigned short end)</argsstring>
        <name>atGetIotBody</name>
        <param>
          <type>unsigned short</type>
          <declname>start</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/atprocess/athttp.c" line="196" column="12" bodyfile="main/atprocess/athttp.c" bodystart="196" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="athttp_8c_1a8e28428fd6ad0ad6956578abcd701a4b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int atGetHttpSize</definition>
        <argsstring>(char *recbuf, int len)</argsstring>
        <name>atGetHttpSize</name>
        <param>
          <type>char *</type>
          <declname>recbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/atprocess/athttp.c" line="223" column="12" bodyfile="main/atprocess/athttp.c" bodystart="223" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="athttp_8c_1ae9e86610271a3afe21e55bf5547b9f22" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void atPraseHttpIotInfo</definition>
        <argsstring>(char *recbuf, int len)</argsstring>
        <name>atPraseHttpIotInfo</name>
        <param>
          <type>char *</type>
          <declname>recbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/atprocess/athttp.c" line="260" column="13" bodyfile="main/atprocess/athttp.c" bodystart="260" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="athttp_8c_1abab3a82d15e488dd618a6dafeb3329fd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void atPraseHttpOk</definition>
        <argsstring>(char *recbuf, int len)</argsstring>
        <name>atPraseHttpOk</name>
        <param>
          <type>char *</type>
          <declname>recbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/atprocess/athttp.c" line="362" column="13" bodyfile="main/atprocess/athttp.c" bodystart="362" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="athttp_8c_1ae16476966c96c60047eca2e10eabfbab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void atPraseHttpSpecial</definition>
        <argsstring>(char *recbuf, int len)</argsstring>
        <name>atPraseHttpSpecial</name>
        <param>
          <type>char *</type>
          <declname>recbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/atprocess/athttp.c" line="411" column="13" bodyfile="main/atprocess/athttp.c" bodystart="411" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="athttp_8c_1a7a414a435b7a3016ae558aeeb3afaff1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void atPraseHttpError</definition>
        <argsstring>(char *recbuf, int len)</argsstring>
        <name>atPraseHttpError</name>
        <param>
          <type>char *</type>
          <declname>recbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/atprocess/athttp.c" line="432" column="13" bodyfile="main/atprocess/athttp.c" bodystart="432" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="athttp_8c_1a2e21ada04776231bb165f45ae3e16e79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void atCmdStartGetIotInfo</definition>
        <argsstring>(void)</argsstring>
        <name>atCmdStartGetIotInfo</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/atprocess/athttp.c" line="438" column="6" bodyfile="main/atprocess/athttp.c" bodystart="438" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="athttp_8c_1ab506d21c8d5b08649531d7fa6fa11b7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void atCmdStartGetOtaInfo</definition>
        <argsstring>(void)</argsstring>
        <name>atCmdStartGetOtaInfo</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/atprocess/athttp.c" line="444" column="6" bodyfile="main/atprocess/athttp.c" bodystart="444" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="athttp_8c_1ae281489e0272092c53a6ce1e1ec2b00b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void atPraseHttpCmd</definition>
        <argsstring>(char *recbuf, int len)</argsstring>
        <name>atPraseHttpCmd</name>
        <param>
          <type>char *</type>
          <declname>recbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/atprocess/athttp.c" line="450" column="6" bodyfile="main/atprocess/athttp.c" bodystart="450" bodyend="459"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>WiFi<sp/>station<sp/>Example</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/>This<sp/>example<sp/>code<sp/>is<sp/>in<sp/>the<sp/>Public<sp/>Domain<sp/>(or<sp/>CC0<sp/>licensed,<sp/>at<sp/>your<sp/>option.)</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>this</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/>software<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_log.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cJSON.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;iotinfo.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;atcmd.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;athttp.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ATTAG<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;athttp&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>URL_TEST<sp/>&quot;47.242.12.154:8080/freezer.bin&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>URL_TEST<sp/>&quot;47.242.12.154:8080/1.txt&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OTA_READMODE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OTA_NONE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OTA_WORKING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OTA_FAIL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OTA_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OTA_FIRST_PACK_SIZE<sp/><sp/><sp/><sp/><sp/>1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OTA_ONE_PACK_MAX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*otaBuf=NULL;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>otaStep=0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>httpBodySize=0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>atOtaQuit(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>type)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type<sp/>==<sp/>OTA_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>iotinfo_module.otaStatus<sp/>=<sp/>OTA_SUCCESS;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>otaStep<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>httpBodySize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>ATSENDCMD_CHANGE(ATHTTPTERM);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>atGetOtaInfo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*url)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret=0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sendbuf=NULL;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(url<sp/>==<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>sendbuf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)malloc(128);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sendbuf<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>ret<sp/>=<sp/>snprintf(sendbuf,<sp/>128,<sp/>AT_CMD_ATOTAPARA_SEND,<sp/>url);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>&lt;<sp/>128)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>ret=0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>ATOTAPARA<sp/>[%s]&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>,<sp/>sendbuf);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>atMallocCmd(ATHTTPPARA,<sp/>sendbuf,<sp/>AT_CMD_ATOTAPARA_RESPOND)<sp/>==<sp/>0)<sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>atSendCmdChange(ATHTTPPARA,<sp/>sendbuf,<sp/>AT_CMD_ATOTAPARA_RESPOND,<sp/>AT_CMD_ATOTAPARA_TIMEOUT,<sp/>AT_CMD_ATOTAPARA_RETRY);<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret=-1;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>ret=-1;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>free(sendbuf);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>sendbuf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>atGetOtaBody(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>step)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret=0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sendbuf=NULL;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>otaStep:%d<sp/>httpBodySize:%d&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>,<sp/>step,<sp/>httpBodySize);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(httpBodySize<sp/>&lt;<sp/>OTA_FIRST_PACK_SIZE<sp/>||<sp/>step<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>sendbuf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)malloc(<sp/>AT_CMD_ATHTTPREAD_SEND_MAXLEN<sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sendbuf<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(step<sp/>==<sp/>1)<sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>snprintf(sendbuf,<sp/>AT_CMD_ATOTAREAD_SEND_MAXLEN,<sp/>AT_CMD_ATOTAREAD_SEND,<sp/>0,<sp/>OTA_FIRST_PACK_SIZE);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(httpBodySize<sp/>&lt;<sp/>OTA_FIRST_PACK_SIZE<sp/>+<sp/>OTA_ONE_PACK_MAX<sp/>*<sp/>step)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>ret<sp/>=<sp/>OTA_ONE_PACK_MAX;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(OTA_READMODE<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>OTA_FIRST_PACK_SIZE<sp/>+<sp/>OTA_ONE_PACK_MAX<sp/>*<sp/>(step-2);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>snprintf(sendbuf,<sp/>AT_CMD_ATOTAREAD_SEND_MAXLEN,<sp/>AT_CMD_ATOTAREAD_SEND,<sp/>ret,<sp/>OTA_ONE_PACK_MAX);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#elif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>snprintf(sendbuf,<sp/>AT_CMD_ATOTAREAD_SEND_MAXLEN,<sp/>AT_CMD_ATOTAREAD_SEND,<sp/>0,<sp/>OTA_ONE_PACK_MAX);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>&lt;<sp/>AT_CMD_ATOTAREAD_SEND_MAXLEN)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>ret=0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>ATOTAREAD<sp/>%d<sp/>[%s]&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>,<sp/>step,<sp/>sendbuf);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>atMallocCmd(ATOTAREAD,<sp/>sendbuf,<sp/>AT_CMD_ATOTAREAD_RESPOND)<sp/>==<sp/>0)<sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g_atcmd_uri_map_send.wait<sp/>=<sp/>ATCMD_WAIT_ADD;<sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>atSendCmdChange(ATOTAREAD,<sp/>sendbuf,<sp/>AT_CMD_ATOTAREAD_RESPOND,<sp/>AT_CMD_ATOTAREAD_TIMEOUT,<sp/>AT_CMD_ATOTAREAD_RETRY);<sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret=-1;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>ret=-1;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>free(sendbuf);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>sendbuf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>appOtaReceive(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buflen);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>atMergeOtaInfo(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>recbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str=NULL,<sp/>*strtemp=NULL;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ESP_LOGI(ATTAG,<sp/>&quot;%s<sp/>otapack<sp/>data<sp/>step:%d<sp/>len:%d<sp/>recbuf[%s]&quot;,<sp/>__FUNCTION__<sp/>,<sp/>otaStep,<sp/>len,<sp/>recbuf);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>str<sp/>=<sp/>strstr(recbuf,<sp/>AT_CMD_ATOTAREAD_RESPOND);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(str)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setReportTime(0);//set<sp/>report<sp/>clean</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lentemp<sp/>=<sp/>atoi(str<sp/>+<sp/>strlen(AT_CMD_ATOTAREAD_RESPOND));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>lentemp<sp/>==<sp/>0<sp/>||<sp/>(lentemp<sp/>==<sp/>1024<sp/>&amp;&amp;<sp/>len<sp/>!=<sp/>1059)<sp/><sp/>)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/>lentemp;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>strtemp<sp/>=<sp/>strstr(str,<sp/></highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>*(strtemp<sp/>+<sp/>2<sp/>+<sp/>len)<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>otapack<sp/>data<sp/>otaStep:%d<sp/>len:%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>,<sp/>otaStep,<sp/>len);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(otaStep)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(otaStep<sp/>==<sp/>1)<sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otaBuf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)realloc(otaBuf,<sp/>OTA_ONE_PACK_MAX);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(otaBuf<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>ota<sp/>buf<sp/>error<sp/>&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(len<sp/>==<sp/>OTA_FIRST_PACK_SIZE){</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(otaBuf,<sp/>strtemp<sp/>+<sp/>2,<sp/>len);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(appOtaReceive(otaStep,<sp/>otaBuf,<sp/>len)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atGetOtaBody(++otaStep);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(otaStep<sp/>&gt;<sp/>1<sp/>&amp;&amp;<sp/>otaBuf)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(httpBodySize<sp/>&gt;<sp/>OTA_FIRST_PACK_SIZE<sp/>+<sp/>OTA_ONE_PACK_MAX<sp/>*<sp/>(otaStep<sp/>-<sp/>1)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>memcpy(otatestbuf+OTA_FIRST_PACK_SIZE<sp/>+OTA_ONE_PACK_MAX<sp/>*<sp/>(otaStep<sp/>-<sp/>2),<sp/>strtemp<sp/>+<sp/>2,<sp/>len);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(otaBuf,<sp/>strtemp<sp/>+<sp/>2,<sp/>len);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(appOtaReceive(otaStep,<sp/>otaBuf,<sp/>len)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atGetOtaBody(++otaStep);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>memcpy(otatestbuf+OTA_FIRST_PACK_SIZE<sp/>+OTA_ONE_PACK_MAX<sp/>*<sp/>(otaStep<sp/>-<sp/>2),<sp/>strtemp<sp/>+<sp/>2,<sp/>len);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(otaBuf,<sp/>strtemp<sp/>+<sp/>2,<sp/>len);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>otapack<sp/>receive<sp/>over<sp/>step:%d<sp/>httpBodySize:%d<sp/>pack<sp/>[%s]<sp/>&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>,<sp/>otaStep,<sp/>httpBodySize,<sp/>otaBuf);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(appOtaReceive(-1,<sp/>otaBuf,<sp/>len)<sp/>==<sp/>0)<sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_atcmd_uri_map_send.wait<sp/>=<sp/>ATCMD_WAIT_NONE;</highlight><highlight class="comment">//only<sp/>one<sp/>receive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atOtaQuit(OTA_SUCCESS);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_atcmd_uri_map_send.wait<sp/>=<sp/>ATCMD_WAIT_NONE;</highlight><highlight class="comment">//only<sp/>one<sp/>receive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atOtaQuit(OTA_FAIL);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(otaBuf);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otaBuf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//otabuf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="comment">//head</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>atGetIotInfo(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>imei,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>customid)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret=0;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sendbuf=NULL;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>IMEI<sp/>%lld&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>,<sp/>imei);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(imei<sp/>&lt;<sp/>100000000000000ULL<sp/>||<sp/>customid<sp/>==<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>sendbuf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)malloc(<sp/>strlen(AT_CMD_ATHTTPPARA_SEND)<sp/>+<sp/>AT_CMD_IMEI_IMSI_LEN<sp/>+<sp/>strlen(customid));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sendbuf<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>ret<sp/>=<sp/>snprintf(sendbuf,<sp/>128,<sp/>AT_CMD_ATHTTPPARA_SEND,<sp/>imei,<sp/>customid);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>&lt;<sp/>128)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>ret=0;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>ATHTTPPARA<sp/>[%s]&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>,<sp/>sendbuf);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>atMallocCmd(ATHTTPPARA,<sp/>sendbuf,<sp/>AT_CMD_ATHTTPPARA_RESPOND)<sp/>==<sp/>0)<sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>atSendCmdChange(ATHTTPPARA,<sp/>sendbuf,<sp/>AT_CMD_ATHTTPPARA_RESPOND,<sp/>AT_CMD_ATHTTPPARA_TIMEOUT,<sp/>AT_CMD_ATHTTPPARA_RETRY);<sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret=-1;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>ret=-1;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>free(sendbuf);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>sendbuf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>atGetIotBody(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>start,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>end)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret=0;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sendbuf=NULL;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>start:%d<sp/>end:%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>,<sp/>start,<sp/>end);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(start<sp/>&gt;=<sp/>end<sp/>||<sp/>end<sp/>&lt;<sp/>10<sp/>)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>sendbuf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)malloc(<sp/>AT_CMD_ATHTTPREAD_SEND_MAXLEN<sp/>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sendbuf<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>ret<sp/>=<sp/>snprintf(sendbuf,<sp/>AT_CMD_ATHTTPREAD_SEND_MAXLEN,<sp/>AT_CMD_ATHTTPREAD_SEND,<sp/>start,<sp/>end);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>&lt;<sp/>128)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>ret=0;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>ATHTTPREAD<sp/>[%s]&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>,<sp/>sendbuf);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>atMallocCmd(ATHTTPREAD,<sp/>sendbuf,<sp/>AT_CMD_ATHTTPPARA_RESPOND)<sp/>==<sp/>0)<sp/><sp/></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>atSendCmdChange(ATHTTPREAD,<sp/>sendbuf,<sp/>AT_CMD_ATHTTPPARA_RESPOND,<sp/>AT_CMD_ATHTTPPARA_TIMEOUT,<sp/>AT_CMD_ATHTTPPARA_RETRY);<sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret=-1;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>ret=-1;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>free(sendbuf);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>sendbuf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>atGetHttpSize(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>recbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str=NULL;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>statusCode=0;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>str<sp/>=<sp/>strchr(recbuf,<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(str)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>httpBodySize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>statusCode<sp/>=<sp/>atoi(str+1);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(statusCode<sp/>==<sp/>200)<sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/>strchr(str+1,<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(str)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>httpBodySize<sp/>=<sp/>atoi(str+1);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(httpBodySize)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iotinfo_module.otaStatus<sp/>&amp;&amp;<sp/>httpBodySize<sp/>&lt;<sp/>OTA_FIRST_PACK_SIZE)</highlight><highlight class="comment">//out<sp/>ota</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atOtaQuit(OTA_FAIL);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ATSENDCMD_CHANGE(ATHTTPHEAD);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iotinfo_module.otaStatus<sp/>==<sp/>OTA_WORKING)<sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otaStep<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atGetOtaBody(otaStep);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atGetIotBody(0,<sp/>httpBodySize);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>httpBodySize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>statusCode:%d<sp/>httpBodySize:%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>statusCode,<sp/>httpBodySize);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//httpBodySize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//statusCode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="comment">//,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>atPraseHttpIotInfo(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>recbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str=NULL,<sp/>*strtemp=NULL;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>cJSON<sp/>*root<sp/>=<sp/>NULL,<sp/>*root1<sp/>=<sp/>NULL,<sp/>*root2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>str<sp/>=<sp/>strchr(recbuf,<sp/></highlight><highlight class="charliteral">&apos;{&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(str)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(ATTAG,</highlight><highlight class="stringliteral">&quot;JSON<sp/>Parse<sp/>str<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>str);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>strtemp<sp/>=<sp/>strstr(str,<sp/>AT_CMD_ATHTTPREAD_RESPOND);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strtemp)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*strtemp<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(ATTAG,</highlight><highlight class="stringliteral">&quot;JSON<sp/>Parse<sp/>strtemp<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>str);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>root<sp/>=<sp/>cJSON_Parse(str);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root)</highlight><highlight class="comment">//<sp/>&amp;&amp;<sp/>cJSON_IsObject(root))<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strtemp<sp/>=<sp/>cJSON_Print(root);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(ATTAG,</highlight><highlight class="stringliteral">&quot;JSON<sp/>Parse<sp/>root<sp/>here<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>strtemp);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cJSON_free(strtemp);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strtemp<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root1<sp/>=<sp/>cJSON_GetObjectItem(root,<sp/>AT_CMD_JSON_STATUS);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(root1<sp/>&amp;&amp;<sp/>cJSON_IsString(root1)<sp/>&amp;&amp;<sp/>*(root1-&gt;valuestring)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root1<sp/>=<sp/>cJSON_GetObjectItem(root,<sp/>AT_CMD_JSON_DATA);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(root1<sp/>&amp;&amp;<sp/>cJSON_IsObject(root1))</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strtemp<sp/>=<sp/>cJSON_Print(root1);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(ATTAG,</highlight><highlight class="stringliteral">&quot;JSON<sp/>Parse<sp/>data<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>strtemp);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cJSON_free(strtemp);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strtemp<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root2<sp/>=<sp/>cJSON_GetObjectItem(root1,<sp/>AT_CMD_JSON_PRODUCTKEY);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(root2<sp/>&amp;&amp;<sp/>cJSON_IsString(root2)<sp/>&amp;&amp;<sp/>strlen(root2-&gt;valuestring))</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/>cJSON_GetStringValue(root2);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iotinfo_module.productKey<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>realloc(iotinfo_module.productKey,<sp/>strlen(root2-&gt;valuestring)+1);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iotinfo_module.productKey)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(iotinfo_module.productKey,<sp/>root2-&gt;valuestring,<sp/>strlen(root2-&gt;valuestring)+1);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//productKey</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(ATTAG,</highlight><highlight class="stringliteral">&quot;JSON<sp/>Parse<sp/>productKey<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>iotinfo_module.productKey);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root2<sp/>=<sp/>cJSON_GetObjectItem(root1,<sp/>AT_CMD_JSON_DEVICESECRET);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(root2<sp/>&amp;&amp;<sp/>cJSON_IsString(root2)<sp/>&amp;&amp;<sp/>strlen(root2-&gt;valuestring))</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iotinfo_module.deviceSecret<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>realloc(iotinfo_module.deviceSecret,<sp/>strlen(root2-&gt;valuestring)+1);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iotinfo_module.deviceSecret)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(iotinfo_module.deviceSecret,<sp/>root2-&gt;valuestring,<sp/>strlen(root2-&gt;valuestring)+1);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//deviceSecret</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(ATTAG,</highlight><highlight class="stringliteral">&quot;JSON<sp/>Parse<sp/>deviceSecret<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>iotinfo_module.deviceSecret);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root2<sp/>=<sp/>cJSON_GetObjectItem(root1,<sp/>AT_CMD_JSON_DOMAIN);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(root2<sp/>&amp;&amp;<sp/>cJSON_IsString(root2))</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strtemp<sp/>=<sp/>cJSON_GetStringValue(root2);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/>strchr(strtemp,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iotinfo_module.iotPort<sp/>=<sp/>atoi(str+1);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>str<sp/>-<sp/>strtemp<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iotinfo_module.iotDomain<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>realloc(iotinfo_module.iotDomain,<sp/>len);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iotinfo_module.iotDomain)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(ATTAG,</highlight><highlight class="stringliteral">&quot;JSON<sp/>Parse<sp/>strtemp<sp/>[%s]&quot;</highlight><highlight class="normal">,<sp/>strtemp);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(iotinfo_module.iotDomain,<sp/>strtemp,<sp/>len<sp/>-<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(iotinfo_module.iotDomain<sp/>+<sp/>len-1)<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//domain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(ATTAG,</highlight><highlight class="stringliteral">&quot;JSON<sp/>Parse<sp/>iotDomain<sp/>[%s]:%d&quot;</highlight><highlight class="normal">,<sp/>iotinfo_module.iotDomain,<sp/>iotinfo_module.iotPort);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SaveInfoToFlash(strtemp);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATSENDCMD_CHANGE(ATHTTPTERM);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cJSON_Delete(root);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//root</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//AT_CMD_ATHTTPREAD_RESPOND</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment">//<sp/>static<sp/>void<sp/>atPraseHttpHeadInfo(<sp/>char*<sp/>recbuf,<sp/>int<sp/>len)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>char*<sp/>str=NULL;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>if(recbuf<sp/>==<sp/>NULL<sp/>||<sp/>len<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>str<sp/>=<sp/>strstr(recbuf,<sp/>&quot;HTTP/1.1<sp/>200&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>if(str)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if(iotinfo_module.otaStatus<sp/>==<sp/>OTA_WORKING)<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>otaStep<sp/>=<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>atGetOtaBody(otaStep);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>else<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>atGetIotBody(0,<sp/>httpBodySize);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>httpBodySize<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>atPraseHttpOk(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>recbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="363"><highlight class="normal">{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(atcmd_current)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ATHTTPINIT:</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iotinfo_module.otaStatus<sp/>==<sp/>OTA_WORKING)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atGetOtaInfo(iotinfo_module.upgradeUrl);</highlight><highlight class="comment">//ATHTTPPARA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atGetIotInfo(iotinfo_module.imei,<sp/>AT_CMD_CUSTOMID);</highlight><highlight class="comment">//ATHTTPPARA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ATHTTPPARA:</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(OTA_READMODE<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATSENDCMD_CHANGE(ATREADMODE);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ATREADMODE:</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATSENDCMD_CHANGE(ATHTTPACTION);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="preprocessor">#elif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATSENDCMD_CHANGE(ATHTTPACTION);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ATHTTPACTION:</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATCMD_WAIT_SPECIAL(AT_CMD_ATHTTPACTION_TIMEOUT);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>case<sp/>ATHTTPHEAD:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>atPraseHttpHeadInfo(recbuf,<sp/>len);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ATHTTPREAD:</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATCMD_WAIT_SPECIAL(AT_CMD_ATHTTPREAD_TIMEOUT);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ATOTAREAD:</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATCMD_WAIT_SPECIAL(AT_CMD_ATOTAREAD_TIMEOUT);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ATHTTPTERM:</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iotinfo_module.otaStatus<sp/>==<sp/>OTA_SUCCESS)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fzRespondUgrade(ERR_OK);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATSENDCMD_CHANGE_NULL();</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iotinfo_module.iotStatus<sp/>=<sp/>IOT_SAVEBASEINFO;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>not<sp/>atcmd_current&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>atPraseHttpSpecial(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>recbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="412"><highlight class="normal">{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>g_atcmd_uri_map_send.wait<sp/>==<sp/>ATCMD_WAIT_ADD)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ESP_LOGI(ATTAG,<sp/>&quot;recbuf<sp/>[%s]<sp/>[%s]<sp/>not<sp/>%s&quot;,<sp/>recbuf,<sp/>AT_CMD_ATHTTPACTION_SEND+2,<sp/>AT_CMD_ATHTTPACTION_SEND+1+AT_CMD_ATHTTPACTION_RESPOND_SPLEN<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(atcmd_current<sp/>==<sp/>ATHTTPACTION<sp/>&amp;&amp;<sp/>ATCMD_WAIT_SPECIAL_CMP(recbuf,<sp/>ATHTTPACTION)<sp/>)<sp/><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g_atcmd_uri_map_send.wait<sp/>=<sp/>ATCMD_WAIT_NONE;</highlight><highlight class="comment">//only<sp/>one<sp/>receive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>atGetHttpSize(recbuf,<sp/>len);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(atcmd_current<sp/>==<sp/>ATHTTPREAD<sp/>&amp;&amp;<sp/>ATCMD_WAIT_SPECIAL_CMP(recbuf,<sp/>ATHTTPREAD)<sp/>){</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g_atcmd_uri_map_send.wait<sp/>=<sp/>ATCMD_WAIT_NONE;</highlight><highlight class="comment">//only<sp/>one<sp/>receive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>atPraseHttpIotInfo(recbuf,<sp/>len);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(atcmd_current<sp/>==<sp/>ATOTAREAD){</highlight><highlight class="comment">//<sp/>&amp;&amp;<sp/>memcmp(recbuf,<sp/>ATCMDRESPONDOKSTR,<sp/>strlen(ATCMDRESPONDOKSTR))<sp/>==<sp/>0<sp/>){//ATCMD_WAIT_SPECIAL_CMP(recbuf,<sp/>ATOTAREAD)<sp/>){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(atMergeOtaInfo(recbuf,<sp/>len)<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>g_atcmd_uri_map_send.wait<sp/>=<sp/>ATCMD_WAIT_NONE;//only<sp/>one<sp/>receive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>atMergeOtaInfo(recbuf,<sp/>len);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>atPraseHttpError(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>recbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="433"><highlight class="normal">{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>Read<sp/>ERROR<sp/>bytes&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>atSendCmd(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if(atcmd_current<sp/>==<sp/>ATOTAREAD<sp/>&amp;&amp;<sp/>g_atcmd_uri_map_send.wait<sp/>!=<sp/>ATCMD_WAIT_ADD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>atCmdStartGetIotInfo(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="439"><highlight class="normal">{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>httpBodySize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>iotinfo_module.otaStatus<sp/>=<sp/>OTA_NONE;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>ATSENDCMD_CHANGE(ATHTTPINIT);</highlight></codeline>
<codeline lineno="443"><highlight class="normal">}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>atCmdStartGetOtaInfo(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="445"><highlight class="normal">{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>httpBodySize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>iotinfo_module.otaStatus<sp/>=<sp/>OTA_WORKING;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>ATSENDCMD_CHANGE(ATHTTPINIT);</highlight></codeline>
<codeline lineno="449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>atPraseHttpCmd(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>recbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="451"><highlight class="normal">{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>atcmd_current<sp/>:<sp/>%d<sp/>wait:%d&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>,<sp/>atcmd_current,<sp/>g_atcmd_uri_map_send.wait);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ATCMDRESPONDOK(recbuf,<sp/>len)<sp/>)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>atPraseHttpOk(recbuf,<sp/>len);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>g_atcmd_uri_map_send.wait<sp/>)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>atPraseHttpSpecial(recbuf,<sp/>len);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="comment">//receive<sp/>not<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>atPraseHttpError(recbuf,<sp/>len);</highlight></codeline>
<codeline lineno="459"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="main/atprocess/athttp.c"/>
  </compounddef>
</doxygen>
