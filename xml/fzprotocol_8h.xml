<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="fzprotocol_8h" kind="file" language="C++">
    <compoundname>fzprotocol.h</compoundname>
    <includedby refid="cmdprase_8c" local="yes">main/iot/cmdprase.c</includedby>
    <includedby refid="fzprotocol__rec_8c" local="yes">main/iot/fzprotocol_rec.c</includedby>
    <includedby refid="fzprotocol__send_8c" local="yes">main/iot/fzprotocol_send.c</includedby>
    <includedby refid="mqtttopic_8c" local="yes">main/iot/mqtttopic.c</includedby>
      <sectiondef kind="func">
      <memberdef kind="function" id="fzprotocol_8h_1ada6dfc312644817ee27dcafa9e538179" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fzReportRegisterInfo</definition>
        <argsstring>(void)</argsstring>
        <name>fzReportRegisterInfo</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/iot/fzprotocol.h" line="7" column="6" bodyfile="main/iot/fzprotocol_send.c" bodystart="22" bodyend="81" declfile="main/iot/fzprotocol.h" declline="7" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fzprotocol_8h_1abff77ef608d87183c6c17cb1cf3dbf63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fzReportAttrsInfo</definition>
        <argsstring>(char step)</argsstring>
        <name>fzReportAttrsInfo</name>
        <param>
          <type>char</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/iot/fzprotocol.h" line="8" column="6" bodyfile="main/iot/fzprotocol_send.c" bodystart="83" bodyend="114" declfile="main/iot/fzprotocol.h" declline="8" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fzprotocol_8h_1a712db936bdeb7d4bc40a04e92f949aee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fzReportAlarmInfo</definition>
        <argsstring>(void)</argsstring>
        <name>fzReportAlarmInfo</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/iot/fzprotocol.h" line="9" column="6" bodyfile="main/iot/fzprotocol_send.c" bodystart="116" bodyend="177" declfile="main/iot/fzprotocol.h" declline="9" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fzprotocol_8h_1a1722b201e1ba55f0145f60c0f34064e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fzReportShadowUpdate</definition>
        <argsstring>(int vid)</argsstring>
        <name>fzReportShadowUpdate</name>
        <param>
          <type>int</type>
          <declname>vid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/iot/fzprotocol.h" line="10" column="6" bodyfile="main/iot/fzprotocol_send.c" bodystart="252" bodyend="285" declfile="main/iot/fzprotocol.h" declline="10" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fzprotocol_8h_1a3c1fdf74c622e24e39617e7106971d4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fzRespondAlarmQuery</definition>
        <argsstring>(const char *messageId, unsigned int respondbit)</argsstring>
        <name>fzRespondAlarmQuery</name>
        <param>
          <type>const char *</type>
          <declname>messageId</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>respondbit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/iot/fzprotocol.h" line="11" column="6" bodyfile="main/iot/fzprotocol_send.c" bodystart="183" bodyend="215" declfile="main/iot/fzprotocol.h" declline="11" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fzprotocol_8h_1a1f11600df46739ff377c0638064e5154" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fzRespondAttrsQuery</definition>
        <argsstring>(const char *messageId, unsigned int respondbit)</argsstring>
        <name>fzRespondAttrsQuery</name>
        <param>
          <type>const char *</type>
          <declname>messageId</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>respondbit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/iot/fzprotocol.h" line="12" column="6" bodyfile="main/iot/fzprotocol_send.c" bodystart="223" bodyend="249" declfile="main/iot/fzprotocol.h" declline="12" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fzprotocol_8h_1a550d474ec0c3eaddcf160caa180f9915" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fzRespondShadowUpdate</definition>
        <argsstring>(unsigned int setbit, int vid)</argsstring>
        <name>fzRespondShadowUpdate</name>
        <param>
          <type>unsigned int</type>
          <declname>setbit</declname>
        </param>
        <param>
          <type>int</type>
          <declname>vid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/iot/fzprotocol.h" line="13" column="6" bodyfile="main/iot/fzprotocol_send.c" bodystart="287" bodyend="318" declfile="main/iot/fzprotocol.h" declline="13" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fzprotocol_8h_1aaa38e04f7a37c52a3414f06dffafc6ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fzReceiveShadowMsg</definition>
        <argsstring>(char *rbuf, int len)</argsstring>
        <name>fzReceiveShadowMsg</name>
        <param>
          <type>char *</type>
          <declname>rbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/iot/fzprotocol.h" line="17" column="6" bodyfile="main/iot/fzprotocol_rec.c" bodystart="32" bodyend="99" declfile="main/iot/fzprotocol.h" declline="17" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fzprotocol_8h_1a9ab121bb2c4e81b9871b6884d99d2f8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fzReceiveRrpcMsg</definition>
        <argsstring>(char *rbuf, int len, const char *messageId)</argsstring>
        <name>fzReceiveRrpcMsg</name>
        <param>
          <type>char *</type>
          <declname>rbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>messageId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/iot/fzprotocol.h" line="18" column="6" bodyfile="main/iot/fzprotocol_rec.c" bodystart="101" bodyend="143" declfile="main/iot/fzprotocol.h" declline="18" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fzprotocol_8h_1a0700a5f79dbf4fb2756755f85e5ddea8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fzReceiveUpgradeMsg</definition>
        <argsstring>(char *rbuf, int len)</argsstring>
        <name>fzReceiveUpgradeMsg</name>
        <param>
          <type>char *</type>
          <declname>rbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/iot/fzprotocol.h" line="19" column="6" bodyfile="main/iot/fzprotocol_rec.c" bodystart="156" bodyend="291" declfile="main/iot/fzprotocol.h" declline="19" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>__FZ_PROTOCOL__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__FZ_PROTOCOL__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//send</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fzReportRegisterInfo(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fzReportAttrsInfo(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>step);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fzReportAlarmInfo(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fzReportShadowUpdate(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vid);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fzRespondAlarmQuery(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>messageId,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>respondbit);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fzRespondAttrsQuery(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>messageId,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>respondbit);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fzRespondShadowUpdate(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>setbit,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vid);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//rec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fzReceiveShadowMsg(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>rbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fzReceiveRrpcMsg(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>rbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>messageId);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fzReceiveUpgradeMsg(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>rbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="main/iot/fzprotocol.h"/>
  </compounddef>
</doxygen>
