<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="iotinfo_8c" kind="file" language="C++">
    <compoundname>iotinfo.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="yes">esp_system.h</includes>
    <includes local="yes">esp_log.h</includes>
    <includes refid="drv__nvs__flash_8h" local="yes">drv_nvs_flash.h</includes>
    <includes refid="infra__sha256_8h" local="yes">infra_sha256.h</includes>
    <includes refid="iotinfo_8h" local="yes">iotinfo.h</includes>
    <incdepgraph>
      <node id="1">
        <label>G:/code/esp/code/freezer/main/iot/iotinfo.c</label>
        <link refid="iotinfo_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>iotinfo.h</label>
        <link refid="iotinfo_8h_source"/>
      </node>
      <node id="8">
        <label>stdint.h</label>
      </node>
      <node id="6">
        <label>drv_nvs_flash.h</label>
        <link refid="drv__nvs__flash_8h_source"/>
      </node>
      <node id="7">
        <label>infra_sha256.h</label>
        <link refid="infra__sha256_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>esp_system.h</label>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
      <node id="5">
        <label>esp_log.h</label>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="iotinfo_8c_1ac998ea02fbd821fc123d60445ce76f38" prot="public" static="no">
        <name>UINT_MAX</name>
        <initializer>(~0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/code/esp/code/freezer/main/iot/iotinfo.c" line="24" column="9" bodyfile="G:/code/esp/code/freezer/main/iot/iotinfo.c" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="iotinfo_8c_1afc0f2ad2b2c78b7b8d132d5a7f33360a" prot="public" static="no">
        <name>DEV_SIGN_CLIENT_ID_MAXLEN</name>
        <initializer>(128)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/code/esp/code/freezer/main/iot/iotinfo.c" line="25" column="9" bodyfile="G:/code/esp/code/freezer/main/iot/iotinfo.c" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="iotinfo_8c_1af5b9f206d13db4a5bd04a19cba7c2e11" prot="public" static="no">
        <name>DEV_SIGN_SOURCE_MAXLEN</name>
        <initializer>(200)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/code/esp/code/freezer/main/iot/iotinfo.c" line="26" column="9" bodyfile="G:/code/esp/code/freezer/main/iot/iotinfo.c" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="iotinfo_8c_1a36f0c449db8cf439ac8fbb197d80ec9a" prot="public" static="no">
        <name>DEV_SIGN_PASSWD_LEN</name>
        <initializer>(32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/code/esp/code/freezer/main/iot/iotinfo.c" line="27" column="9" bodyfile="G:/code/esp/code/freezer/main/iot/iotinfo.c" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="iotinfo_8c_1a6ad448bed6086e0dd07799c5a88868a0" prot="public" static="no">
        <name>DEV_SIGN_USERNAME_LEN</name>
        <initializer>(32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/code/esp/code/freezer/main/iot/iotinfo.c" line="28" column="9" bodyfile="G:/code/esp/code/freezer/main/iot/iotinfo.c" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="iotinfo_8c_1a45ec0d4915e695f88b9455fde5a551ab" prot="public" static="no">
        <name>TIMESTAMP_VALUE</name>
        <initializer>&quot;2009231715&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/code/esp/code/freezer/main/iot/iotinfo.c" line="31" column="9" bodyfile="G:/code/esp/code/freezer/main/iot/iotinfo.c" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="iotinfo_8c_1a27be5e3c3872e165272fa2cb8a0ba36e" prot="public" static="no">
        <name>IOTX_SDK_VERSION</name>
        <initializer>&quot;3.0.1&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/code/esp/code/freezer/main/iot/iotinfo.c" line="32" column="9" bodyfile="G:/code/esp/code/freezer/main/iot/iotinfo.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="iotinfo_8c_1a15d4485dd5dbfa9629086fde47d8e643" prot="public" static="no">
        <name>CLIENTID_STRING</name>
        <initializer>&quot;%lld|timestamp=%s,secureMode=%d,signmethod=hmacsha256,gw=0,ext=0,_v=sdk-c-%s|&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/code/esp/code/freezer/main/iot/iotinfo.c" line="33" column="9" bodyfile="G:/code/esp/code/freezer/main/iot/iotinfo.c" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="iotinfo_8c_1a0b74e47110c983c2a26f6db046b55627" prot="public" static="no">
        <name>SIGN_STRING</name>
        <initializer>&quot;clientId%llddeviceName%lldproductKey%stimestamp%s&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/code/esp/code/freezer/main/iot/iotinfo.c" line="34" column="9" bodyfile="G:/code/esp/code/freezer/main/iot/iotinfo.c" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="iotinfo_8c_1a98c24dc9eb271dd1b713bfa38220de12" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* ATTAG</definition>
        <argsstring></argsstring>
        <name>ATTAG</name>
        <initializer>= &quot;iotinfo&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/code/esp/code/freezer/main/iot/iotinfo.c" line="16" column="19" bodyfile="G:/code/esp/code/freezer/main/iot/iotinfo.c" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="iotinfo_8c_1a8680457a32b63adae08dc799694fec76" prot="public" static="yes" mutable="no">
        <type><ref refid="structdevice__info__t" kindref="compound">device_info_t</ref></type>
        <definition>device_info_t devinfo</definition>
        <argsstring></argsstring>
        <name>devinfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/code/esp/code/freezer/main/iot/iotinfo.c" line="17" column="22" bodyfile="G:/code/esp/code/freezer/main/iot/iotinfo.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="iotinfo_8c_1ae6e98ee42c28b1bc773308b8fe9358b5" prot="public" static="yes" mutable="no">
        <type><ref refid="structdevice__param__t" kindref="compound">device_param_t</ref></type>
        <definition>device_param_t devparam</definition>
        <argsstring></argsstring>
        <name>devparam</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/code/esp/code/freezer/main/iot/iotinfo.c" line="18" column="23" bodyfile="G:/code/esp/code/freezer/main/iot/iotinfo.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="iotinfo_8c_1a2710dcc04827550a95abd1da53813164" prot="public" static="no" mutable="no">
        <type><ref refid="structiotinfo__module__t" kindref="compound">iotinfo_module_t</ref></type>
        <definition>iotinfo_module_t iotinfo_module</definition>
        <argsstring></argsstring>
        <name>iotinfo_module</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/code/esp/code/freezer/main/iot/iotinfo.c" line="19" column="18" bodyfile="G:/code/esp/code/freezer/main/iot/iotinfo.c" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="iotinfo_8c_1a4ff3aac72209b1148e6914129d3b130a" prot="public" static="yes" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int attrReportTime</definition>
        <argsstring></argsstring>
        <name>attrReportTime</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/code/esp/code/freezer/main/iot/iotinfo.c" line="331" column="21" bodyfile="G:/code/esp/code/freezer/main/iot/iotinfo.c" bodystart="331" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="iotinfo_8c_1a3336fde9d9a8a32eb4446f12fe80d91b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mqttInit</definition>
        <argsstring>(void)</argsstring>
        <name>mqttInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/code/esp/code/freezer/main/iot/iotinfo.c" line="20" column="12" bodyfile="G:/code/esp/code/freezer/main/iot/mqtttopic.c" bodystart="309" bodyend="320" declfile="G:/code/esp/code/freezer/main/iot/iotinfo.c" declline="20" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="iotinfo_8c_1ae4a881528aa3548ba566a0cf3bfaae94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int operateHistoryTemp</definition>
        <argsstring>(int temp)</argsstring>
        <name>operateHistoryTemp</name>
        <param>
          <type>int</type>
          <declname>temp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/code/esp/code/freezer/main/iot/iotinfo.c" line="21" column="12" bodyfile="G:/code/esp/code/freezer/main/iot/cmdprase.c" bodystart="103" bodyend="138" declfile="G:/code/esp/code/freezer/main/iot/iotinfo.c" declline="21" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="iotinfo_8c_1a04a831be5cdffe19e4458d2a0bf3329a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _hex2str</definition>
        <argsstring>(uint8_t *input, uint16_t input_len, char *output)</argsstring>
        <name>_hex2str</name>
        <param>
          <type>uint8_t *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>input_len</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/code/esp/code/freezer/main/iot/iotinfo.c" line="36" column="13" bodyfile="G:/code/esp/code/freezer/main/iot/iotinfo.c" bodystart="36" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="iotinfo_8c_1a622c64e908eeffefe7a0c6d7e1f1f7d0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int flashInfoInit</definition>
        <argsstring>(void)</argsstring>
        <name>flashInfoInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/code/esp/code/freezer/main/iot/iotinfo.c" line="46" column="12" bodyfile="G:/code/esp/code/freezer/main/iot/iotinfo.c" bodystart="46" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="iotinfo_8c_1a9faa82412a234b49842c3d38341ffb84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int getMqttInfo</definition>
        <argsstring>(iotinfo_module_t *pmqtt_module)</argsstring>
        <name>getMqttInfo</name>
        <param>
          <type><ref refid="structiotinfo__module__t" kindref="compound">iotinfo_module_t</ref> *</type>
          <declname>pmqtt_module</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/code/esp/code/freezer/main/iot/iotinfo.c" line="160" column="5" bodyfile="G:/code/esp/code/freezer/main/iot/iotinfo.c" bodystart="160" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="iotinfo_8c_1a25cafb3bf6d0f3e4e2c9eb1234ea71bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SaveInfoToFlash</definition>
        <argsstring>(char *domain)</argsstring>
        <name>SaveInfoToFlash</name>
        <param>
          <type>char *</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/code/esp/code/freezer/main/iot/iotinfo.c" line="233" column="5" bodyfile="G:/code/esp/code/freezer/main/iot/iotinfo.c" bodystart="233" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="iotinfo_8c_1a276c86ed9f7d1d2b39f780a2c8655578" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long long</type>
        <definition>unsigned long long str2Imei</definition>
        <argsstring>(char *buf)</argsstring>
        <name>str2Imei</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/code/esp/code/freezer/main/iot/iotinfo.c" line="249" column="20" bodyfile="G:/code/esp/code/freezer/main/iot/iotinfo.c" bodystart="249" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="iotinfo_8c_1a2067d1c1233c0071fc1d280029af1ce5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int iotInfoInit</definition>
        <argsstring>(void)</argsstring>
        <name>iotInfoInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/code/esp/code/freezer/main/iot/iotinfo.c" line="269" column="5" bodyfile="G:/code/esp/code/freezer/main/iot/iotinfo.c" bodystart="269" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="iotinfo_8c_1a178d7698667887d61358c0079dec5b62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setReportTime</definition>
        <argsstring>(unsigned int time)</argsstring>
        <name>setReportTime</name>
        <param>
          <type>unsigned int</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/code/esp/code/freezer/main/iot/iotinfo.c" line="332" column="6" bodyfile="G:/code/esp/code/freezer/main/iot/iotinfo.c" bodystart="332" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="iotinfo_8c_1a0700a5f79dbf4fb2756755f85e5ddea8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fzReceiveUpgradeMsg</definition>
        <argsstring>(char *rbuf, int len)</argsstring>
        <name>fzReceiveUpgradeMsg</name>
        <param>
          <type>char *</type>
          <declname>rbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/code/esp/code/freezer/main/iot/iotinfo.c" line="336" column="13" bodyfile="G:/code/esp/code/freezer/main/iot/fzprotocol_rec.c" bodystart="156" bodyend="291" declfile="G:/code/esp/code/freezer/main/iot/iotinfo.c" declline="336" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="iotinfo_8c_1aec82b7511ea62e713f4f56344a40107c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void iotInfoPro</definition>
        <argsstring>(void)</argsstring>
        <name>iotInfoPro</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/code/esp/code/freezer/main/iot/iotinfo.c" line="337" column="6" bodyfile="G:/code/esp/code/freezer/main/iot/iotinfo.c" bodystart="337" bodyend="380"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>WiFi<sp/>station<sp/>Example</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/>This<sp/>example<sp/>code<sp/>is<sp/>in<sp/>the<sp/>Public<sp/>Domain<sp/>(or<sp/>CC0<sp/>licensed,<sp/>at<sp/>your<sp/>option.)</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>this</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/>software<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_system.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_log.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;drv_nvs_flash.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;infra_sha256.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;iotinfo.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ATTAG<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;iotinfo&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structdevice__info__t" kindref="compound">device_info_t</ref><sp/>devinfo;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structdevice__param__t" kindref="compound">device_param_t</ref><sp/>devparam;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><ref refid="structiotinfo__module__t" kindref="compound">iotinfo_module_t</ref><sp/>iotinfo_module;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mqttInit(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>operateHistoryTemp(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT_MAX<sp/><sp/><sp/><sp/>(~0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEV_SIGN_CLIENT_ID_MAXLEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(128)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEV_SIGN_SOURCE_MAXLEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(200)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEV_SIGN_PASSWD_LEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEV_SIGN_USERNAME_LEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>use<sp/>fixed<sp/>timestamp<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>__TIME__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TIMESTAMP_VALUE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;2009231715&quot;//&quot;2524608000000&quot;//__TIME__<sp/>//&quot;1600052689&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IOTX_SDK_VERSION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;3.0.1&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CLIENTID_STRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;%lld|timestamp=%s,secureMode=%d,signmethod=hmacsha256,gw=0,ext=0,_v=sdk-c-%s|&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIGN_STRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;clientId%llddeviceName%lldproductKey%stimestamp%s&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_hex2str(uint8_t<sp/>*input,<sp/>uint16_t<sp/>input_len,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*output)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*zEncode<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0123456789ABCDEF&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>input_len;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[j++]<sp/>=<sp/>zEncode[(input[i]<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>0xf];</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[j++]<sp/>=<sp/>zEncode[(input[i])<sp/>&amp;<sp/>0xf];</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flashInfoInit(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/>numdata=0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>flashdata;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//deviceSecret</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>flashdata<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>malloc(IOTX_DEVICE_SECRET_LEN);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(flashdata<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err1;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(halGetDeviceSecret(flashdata)<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err1;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>deviceSecret:[%s]<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>flashdata);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>strlen(flashdata)<sp/>&lt;<sp/>32<sp/>)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err1;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iotinfo_module.deviceSecret)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>free(iotinfo_module.deviceSecret);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>iotinfo_module.deviceSecret<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>iotinfo_module.deviceSecret<sp/>=<sp/>flashdata;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//imei<sp/>deviceName<sp/>did</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>flashdata<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>malloc(IOTX_DEVICE_NAME_LEN);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(flashdata<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err2;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(halGetDeviceName(flashdata)<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err2;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>numdata<sp/>=<sp/>str2Imei(flashdata);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>imei:[%s]<sp/>%lld<sp/>&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>flashdata,<sp/>numdata);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(numdata<sp/>&lt;<sp/>100000000000000ULL)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err2;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>iotinfo_module.imei<sp/>=<sp/>numdata;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>free(flashdata);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>flashdata<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//productKey</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>flashdata<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>malloc(IOTX_PRODUCT_KEY_LEN);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(flashdata<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err3;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(halGetProductKey(flashdata)<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err3;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>productKey:[%s]<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>flashdata);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>strlen(flashdata)<sp/>&lt;<sp/>8<sp/>)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err3;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iotinfo_module.productKey)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>free(iotinfo_module.productKey);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>iotinfo_module.productKey<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>iotinfo_module.productKey<sp/>=<sp/>flashdata;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//iotDomain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>flashdata<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>malloc(IOTX_MQTT_DOMAIN_LEN<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(flashdata<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err4;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(halGetIotMqttDomain(flashdata)<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err4;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>iotDomain:[%s]<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>flashdata);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if(<sp/>flashdata<sp/>=<sp/>NULL<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>goto<sp/>err3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iotinfo_module.iotDomain)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>free(iotinfo_module.iotDomain);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>iotinfo_module.iotDomain<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>iotinfo_module.iotDomain<sp/>=<sp/>flashdata;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>flashdata<sp/>=<sp/>strchr(iotinfo_module.iotDomain,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(flashdata<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err4;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>*flashdata<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>iotinfo_module.iotPort<sp/>=<sp/>atoi(flashdata+1);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iotinfo_module.iotPort<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err4;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//iotPort</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>flashdata<sp/>=<sp/>(char*)<sp/>malloc(IOTX_MQTT_PORT_LEN);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if(flashdata<sp/>==<sp/>NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>goto<sp/>err5;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if(halGetIotMqttPort(flashdata)<sp/>&lt;=<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>goto<sp/>err5;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>numdata<sp/>=<sp/>atoi(flashdata);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ESP_LOGI(ATTAG,<sp/>&quot;%s<sp/>iotPort:[%s]<sp/>%lld<sp/>&quot;,<sp/>__FUNCTION__,<sp/>flashdata,<sp/>numdata);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if(<sp/>numdata<sp/>&lt;=<sp/>0<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>goto<sp/>err5;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>iotinfo_module.iotPort<sp/>=<sp/>numdata;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>free(flashdata);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>flashdata<sp/>=<sp/>NULL;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/>err5:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>free(iotinfo_module.iotDomain);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>iotinfo_module.iotDomain<sp/>=<sp/>NULL;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>ESP_LOGI(ATTAG,<sp/>&quot;%s<sp/>err5<sp/>[%d]<sp/>:&quot;,<sp/>__FUNCTION__,<sp/>esp_get_free_heap_size());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal">err4:</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>free(iotinfo_module.productKey);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>iotinfo_module.productKey<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ESP_LOGI(ATTAG,<sp/>&quot;%s<sp/>err4<sp/>[%d]<sp/>:&quot;,<sp/>__FUNCTION__,<sp/>esp_get_free_heap_size());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal">err3:</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>free(iotinfo_module.imei);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>iotinfo_module.imei<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ESP_LOGI(ATTAG,<sp/>&quot;%s<sp/>err3<sp/>[%d]<sp/>:&quot;,<sp/>__FUNCTION__,<sp/>esp_get_free_heap_size());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">err2:</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>free(iotinfo_module.deviceSecret);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>iotinfo_module.deviceSecret<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ESP_LOGI(ATTAG,<sp/>&quot;%s<sp/>err2<sp/>[%d]<sp/>:&quot;,<sp/>__FUNCTION__,<sp/>esp_get_free_heap_size());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">err1:</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>free(flashdata);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>flashdata<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ESP_LOGI(ATTAG,<sp/>&quot;%s<sp/>err1<sp/>[%d]<sp/>:&quot;,<sp/>__FUNCTION__,<sp/>esp_get_free_heap_size());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getMqttInfo(<ref refid="structiotinfo__module__t" kindref="compound">iotinfo_module_t</ref><sp/>*pmqtt_module)</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>IMEI<sp/>%s:%s<sp/>%lld&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>,<sp/>__DATE__,<sp/><sp/>__TIME__,<sp/><sp/>pmqtt_module-&gt;imei);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pmqtt_module<sp/>==<sp/>NULL<sp/>||<sp/>pmqtt_module-&gt;imei<sp/>&lt;<sp/>100000000000000ULL<sp/>||<sp/>pmqtt_module-&gt;secureMode<sp/>&gt;<sp/>3<sp/>)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err0;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//client<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>len<sp/>=<sp/>strlen(CLIENTID_STRING)<sp/>+<sp/>AT_CMD_IMEI_IMSI_LEN<sp/>+<sp/>strlen(TIMESTAMP_VALUE)<sp/>+<sp/>strlen(IOTX_SDK_VERSION);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>IMEI<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>,<sp/>len);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>pmqtt_module-&gt;clientId<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>realloc(pmqtt_module-&gt;clientId,<sp/>len);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pmqtt_module-&gt;clientId<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err1;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>len<sp/>=<sp/>snprintf(pmqtt_module-&gt;clientId,<sp/>DEV_SIGN_CLIENT_ID_MAXLEN,<sp/>CLIENTID_STRING,<sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pmqtt_module-&gt;imei,<sp/>TIMESTAMP_VALUE,<sp/>pmqtt_module-&gt;secureMode,<sp/>IOTX_SDK_VERSION);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>len<sp/>&gt;=<sp/>DEV_SIGN_CLIENT_ID_MAXLEN)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err1;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>clientId<sp/>[%s]<sp/>len<sp/>%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>,<sp/>pmqtt_module-&gt;clientId,<sp/>strlen(pmqtt_module-&gt;clientId)<sp/>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//sign<sp/>source</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*signsource=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>malloc(DEV_SIGN_SOURCE_MAXLEN);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(signsource<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err2;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sign_hex=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>malloc(DEV_SIGN_PASSWD_LEN);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sign_hex<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err3;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>pmqtt_module-&gt;passWord<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>realloc(pmqtt_module-&gt;passWord,<sp/>DEV_SIGN_PASSWD_LEN*2+1);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pmqtt_module-&gt;passWord<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err4;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>len<sp/>=<sp/>snprintf(signsource,<sp/>DEV_SIGN_SOURCE_MAXLEN,<sp/>SIGN_STRING,<sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pmqtt_module-&gt;imei,<sp/>pmqtt_module-&gt;imei,<sp/>pmqtt_module-&gt;productKey,<sp/>TIMESTAMP_VALUE);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>len<sp/>&gt;=<sp/>DEV_SIGN_SOURCE_MAXLEN)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err4;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>signsource<sp/>[%s]<sp/>len<sp/>%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>,<sp/>signsource,<sp/>strlen(signsource)<sp/>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>utilsHmacSha256((uint8_t*)signsource,<sp/>strlen(signsource),<sp/>(uint8_t*)pmqtt_module-&gt;deviceSecret,<sp/>strlen(pmqtt_module-&gt;deviceSecret),<sp/>(uint8_t*)sign_hex);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>_hex2str((uint8_t*)sign_hex,<sp/>DEV_SIGN_PASSWD_LEN,<sp/>pmqtt_module-&gt;passWord);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>*(pmqtt_module-&gt;passWord<sp/>+<sp/>DEV_SIGN_PASSWD_LEN*2)<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>passWord<sp/>[%s]<sp/>len<sp/>%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>,<sp/>pmqtt_module-&gt;passWord,<sp/>strlen(pmqtt_module-&gt;passWord)<sp/>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>free(sign_hex);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>sign_hex<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>free(signsource);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>signsource<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>len<sp/>=<sp/>AT_CMD_IMEI_IMSI_LEN<sp/>+<sp/>strlen(pmqtt_module-&gt;productKey)<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>pmqtt_module-&gt;userName<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>realloc(pmqtt_module-&gt;userName,<sp/>len);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pmqtt_module-&gt;userName<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err5;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>len<sp/>=<sp/>snprintf(pmqtt_module-&gt;userName,<sp/>DEV_SIGN_USERNAME_LEN,<sp/></highlight><highlight class="stringliteral">&quot;%lld&amp;%s&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pmqtt_module-&gt;imei,<sp/>pmqtt_module-&gt;productKey);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>len<sp/>&gt;=<sp/>DEV_SIGN_USERNAME_LEN)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err5;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>userName<sp/>[%s]<sp/>len<sp/>%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>,<sp/>pmqtt_module-&gt;userName,<sp/>strlen(pmqtt_module-&gt;userName)<sp/>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal">err5:</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>free(pmqtt_module-&gt;userName);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>pmqtt_module-&gt;userName<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="218"><highlight class="normal">err4:</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>free(pmqtt_module-&gt;passWord);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>pmqtt_module-&gt;passWord<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">err3:</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>free(sign_hex);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>sign_hex<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="224"><highlight class="normal">err2:</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>free(signsource);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>signsource<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="227"><highlight class="normal">err1:</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>free(pmqtt_module-&gt;clientId);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>pmqtt_module-&gt;clientId<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="230"><highlight class="normal">err0:</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SaveInfoToFlash(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*domain)</highlight></codeline>
<codeline lineno="234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(domain<sp/>==<sp/>NULL)<sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>save<sp/>param<sp/>info<sp/>&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/><sp/>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>halSetDeviceParam((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)iotinfo_module.devparam,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdevice__param__t" kindref="compound">device_param_t</ref>));</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>halSetIotMqttDomain(domain);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>halSetProductKey(iotinfo_module.productKey);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>halSetDeviceSecret(iotinfo_module.deviceSecret);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>halSetNumDeviceName(iotinfo_module.imei);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>save<sp/>iot<sp/>info<sp/>&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/><sp/>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>str2Imei(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf)</highlight></codeline>
<codeline lineno="250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>pbuf;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ret=0,ret1=0;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>ret1<sp/>=<sp/>atol(buf+8);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret1<sp/>&lt;<sp/>1000000)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>pbuf=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>malloc(9);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pbuf<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>memcpy(pbuf,<sp/>buf,<sp/>8);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>*(pbuf<sp/>+<sp/>8)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>ret<sp/>=<sp/>atol(pbuf);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>free(pbuf);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>pbuf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>&lt;<sp/>10000000)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>ret<sp/>=<sp/>ret*10000000<sp/>+<sp/>ret1;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iotInfoInit(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="270"><highlight class="normal">{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>iotinfo_module.devinfo<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&amp;devinfo;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>iotinfo_module.devparam<sp/><sp/><sp/><sp/><sp/>=<sp/>&amp;devparam;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>iotinfo_module.iotStatus<sp/><sp/><sp/><sp/>=<sp/>IOT_NONE;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>iotinfo_module.powerOnTime<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>iotinfo_module.firstOn<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>comein[%d]<sp/>&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>esp_get_free_heap_size());</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for(int<sp/>i<sp/>=0<sp/>;<sp/>i<sp/>&lt;<sp/>10;<sp/>i++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ESP_LOGI(ATTAG,<sp/>&quot;%s<sp/>comein[%d]<sp/>&quot;,<sp/>__FUNCTION__,<sp/>esp_get_free_heap_size());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>flashInfoInit();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ESP_LOGI(ATTAG,<sp/>&quot;%s<sp/>comeout[%d]<sp/>&quot;,<sp/>__FUNCTION__,<sp/>esp_get_free_heap_size());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(flashInfoInit()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>getflash<sp/>success<sp/><sp/>[%d]<sp/>domain<sp/>[%s]<sp/>:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>esp_get_free_heap_size(),<sp/></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iotinfo_module.iotDomain,<sp/>iotinfo_module.iotPort);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>iotinfo_module.iotStatus<sp/>=<sp/>IOT_GETBASEINFO;</highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>after<sp/>getflash<sp/>heap<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>esp_get_free_heap_size()<sp/>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(halGetDeviceParam((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)iotinfo_module.devparam,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdevice__param__t" kindref="compound">device_param_t</ref>))<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="comment">//default<sp/>param</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>iotinfo_module.devparam-&gt;settemp<sp/>=<sp/>-23;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>iotinfo_module.devparam-&gt;showway<sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>iotinfo_module.devparam-&gt;upbacklash<sp/>=<sp/>20*10;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>iotinfo_module.devparam-&gt;downbacklash<sp/>=<sp/>20*10;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>iotinfo_module.devparam-&gt;erroron<sp/>=<sp/>70;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>iotinfo_module.devparam-&gt;erroroff<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>iotinfo_module.devparam-&gt;tempoffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>iotinfo_module.devparam-&gt;settemphigh<sp/>=<sp/>-15;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>iotinfo_module.devparam-&gt;settemplow<sp/>=<sp/>-28;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>iotinfo_module.devparam-&gt;hightempalarm<sp/>=<sp/>-179;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>iotinfo_module.devparam-&gt;lowtempalarm<sp/>=<sp/>-241;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>iotinfo_module.devparam-&gt;heartTime<sp/>=<sp/>DEFAULT_MQTT_HEART_FREQUENCY;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>iotinfo_module.devparam-&gt;reportTime<sp/>=<sp/>DEFAULT_ATTRS_FREQUENCY;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>default<sp/>param<sp/>heap<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>esp_get_free_heap_size()<sp/>);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>iotinfo_module.imei<sp/>=<sp/>860461046399476ULL;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>iotinfo_module.devparam-&gt;showway<sp/><sp/><sp/><sp/><sp/>=<sp/>2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>iotinfo_module.devparam-&gt;upbacklash<sp/>=<sp/>50;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>iotinfo_module.devparam-&gt;downbacklash<sp/>=<sp/>60;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>iotinfo_module.devparam-&gt;reportTime<sp/>=<sp/>60;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>iotinfo_module.iotStatus<sp/>=<sp/>IOT_NONE;//test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>param<sp/><sp/>settemp:%d<sp/>tempoffset:%d<sp/>upbacklash:%d<sp/>downbacklash:%d<sp/>erroron:%d<sp/>erroroff:%d<sp/>lowtempalarm:%d<sp/>hightempalarm:%d&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iotinfo_module.devparam-&gt;settemp,<sp/>iotinfo_module.devparam-&gt;tempoffset,<sp/></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iotinfo_module.devparam-&gt;upbacklash,<sp/>iotinfo_module.devparam-&gt;downbacklash,<sp/></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iotinfo_module.devparam-&gt;erroron,<sp/>iotinfo_module.devparam-&gt;erroroff,<sp/></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iotinfo_module.devparam-&gt;lowtempalarm,<sp/>iotinfo_module.devparam-&gt;hightempalarm);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bleIbeaconInit()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>iotinfo_module.error.errble<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>WifiScanInit();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>wifiScanStart(1);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>iotinfo_module.error.errwifi<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>ESP_LOGI(ATTAG,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>getout<sp/><sp/>[%d]<sp/>&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>esp_get_free_heap_size());</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>attrReportTime=0;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setReportTime(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time)</highlight><highlight class="comment">//10ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal">{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>attrReportTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fzReceiveUpgradeMsg(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>rbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>iotInfoPro(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="comment">//10ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal">{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>errbit=0;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iotinfo_module.powerOnTime<sp/>&lt;<sp/>UINT_MAX)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>iotinfo_module.powerOnTime++;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>iotinfo_module.powerOnTime<sp/>=<sp/>UINT_MAX;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iotinfo_module.iotStatus<sp/>==<sp/>IOT_SAVEBASEINFO)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(ATTAG,</highlight><highlight class="stringliteral">&quot;iotStatus<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>iotinfo_module.iotStatus);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mqttInit()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iotinfo_module.iotStatus<sp/>=<sp/>IOT_SETMQTTINFO;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>attrReportTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iotinfo_module.iotStatus<sp/>==<sp/>IOT_CONNECTMQTT)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iotinfo_module.otaStatus<sp/>!=<sp/>1<sp/>&amp;&amp;<sp/>errbit<sp/>!=<sp/>iotinfo_module.error.errbit)<sp/><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>errbit<sp/>=<sp/>iotinfo_module.error.errbit;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fzReportAlarmInfo();</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(++attrReportTime<sp/>&gt;<sp/>UINT_MAX)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attrReportTime<sp/>=<sp/>UINT_MAX;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else<sp/>if(iotinfo_module.otaStatus<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>attrReportTime<sp/>==<sp/>500<sp/>)//30s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>fzReceiveUpgradeMsg(0,0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(attrReportTime<sp/>%<sp/>3000<sp/>==<sp/>1<sp/>)</highlight><highlight class="comment">//30s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wifiScanStart(1);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(attrReportTime<sp/>%<sp/>30000<sp/>==<sp/>2)</highlight><highlight class="comment">//5min</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operateHistoryTemp(iotinfo_module.realTemp/10);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(attrReportTime<sp/>&gt;<sp/>iotinfo_module.devparam-&gt;reportTime<sp/>*<sp/>60<sp/>*<sp/>100)<sp/>{<sp/></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iotinfo_module.otaStatus)<sp/><sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attrReportTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(ATTAG,</highlight><highlight class="stringliteral">&quot;otaStatus<sp/>1min<sp/>attr&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iotinfo_module.at_module-&gt;atSendtime<sp/>&gt;=<sp/>100)<sp/><sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attrReportTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fzReportAttrsInfo(1);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="G:/code/esp/code/freezer/main/iot/iotinfo.c"/>
  </compounddef>
</doxygen>
